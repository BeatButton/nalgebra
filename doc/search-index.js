var searchIndex = {};
searchIndex['nalgebra'] = {"items":[[0,"","nalgebra","# nalgebra"],[0,"na","","**nalgebra** prelude."],[1,"Identity","nalgebra::na","Special identity matrix. All its operation are no-ops."],[1,"DMat","","Matrix with dimensions unknown at compile-time."],[1,"DVec","","Heap allocated, dynamically sized vector."],[11,"at","","Components of the vector. Contains as much elements as the vector dimension.",0],[1,"DVec1","","Stack-allocated, dynamically sized vector with a maximum size of 1."],[1,"DVec2","","Stack-allocated, dynamically sized vector with a maximum size of 2."],[1,"DVec3","","Stack-allocated, dynamically sized vector with a maximum size of 3."],[1,"DVec4","","Stack-allocated, dynamically sized vector with a maximum size of 4."],[1,"DVec5","","Stack-allocated, dynamically sized vector with a maximum size of 5."],[1,"DVec6","","Stack-allocated, dynamically sized vector with a maximum size of 6."],[1,"Iso2","","Two dimensional isometry."],[11,"rotation","","The rotation applicable by this isometry.",1],[11,"translation","","The translation applicable by this isometry.",1],[1,"Iso3","","Three dimensional isometry."],[11,"rotation","","The rotation applicable by this isometry.",2],[11,"translation","","The translation applicable by this isometry.",2],[1,"Iso4","","Four dimensional isometry."],[11,"rotation","","The rotation applicable by this isometry.",3],[11,"translation","","The translation applicable by this isometry.",3],[1,"Mat1","","Square matrix of dimension 1."],[11,"m11","","",4],[1,"Mat2","","Square matrix of dimension 2."],[11,"m11","","",5],[11,"m21","","",5],[11,"m12","","",5],[11,"m22","","",5],[1,"Mat3","","Square matrix of dimension 3."],[11,"m11","","",6],[11,"m21","","",6],[11,"m31","","",6],[11,"m12","","",6],[11,"m22","","",6],[11,"m32","","",6],[11,"m13","","",6],[11,"m23","","",6],[11,"m33","","",6],[1,"Mat4","","Square matrix of dimension 4."],[11,"m11","","",7],[11,"m21","","",7],[11,"m31","","",7],[11,"m41","","",7],[11,"m12","","",7],[11,"m22","","",7],[11,"m32","","",7],[11,"m42","","",7],[11,"m13","","",7],[11,"m23","","",7],[11,"m33","","",7],[11,"m43","","",7],[11,"m14","","",7],[11,"m24","","",7],[11,"m34","","",7],[11,"m44","","",7],[1,"Mat5","","Square matrix of dimension 5."],[11,"m11","","",8],[11,"m21","","",8],[11,"m31","","",8],[11,"m41","","",8],[11,"m51","","",8],[11,"m12","","",8],[11,"m22","","",8],[11,"m32","","",8],[11,"m42","","",8],[11,"m52","","",8],[11,"m13","","",8],[11,"m23","","",8],[11,"m33","","",8],[11,"m43","","",8],[11,"m53","","",8],[11,"m14","","",8],[11,"m24","","",8],[11,"m34","","",8],[11,"m44","","",8],[11,"m54","","",8],[11,"m15","","",8],[11,"m25","","",8],[11,"m35","","",8],[11,"m45","","",8],[11,"m55","","",8],[1,"Mat6","","Square matrix of dimension 6."],[11,"m11","","",9],[11,"m21","","",9],[11,"m31","","",9],[11,"m41","","",9],[11,"m51","","",9],[11,"m61","","",9],[11,"m12","","",9],[11,"m22","","",9],[11,"m32","","",9],[11,"m42","","",9],[11,"m52","","",9],[11,"m62","","",9],[11,"m13","","",9],[11,"m23","","",9],[11,"m33","","",9],[11,"m43","","",9],[11,"m53","","",9],[11,"m63","","",9],[11,"m14","","",9],[11,"m24","","",9],[11,"m34","","",9],[11,"m44","","",9],[11,"m54","","",9],[11,"m64","","",9],[11,"m15","","",9],[11,"m25","","",9],[11,"m35","","",9],[11,"m45","","",9],[11,"m55","","",9],[11,"m65","","",9],[11,"m16","","",9],[11,"m26","","",9],[11,"m36","","",9],[11,"m46","","",9],[11,"m56","","",9],[11,"m66","","",9],[1,"Rot2","","Two dimensional rotation matrix."],[1,"Rot3","","Three dimensional rotation matrix."],[1,"Rot4","","Four dimensional rotation matrix."],[1,"Vec0","","Vector of dimension 0."],[1,"Vec1","","Vector of dimension 1."],[11,"x","","First component of the vector.",10],[1,"Vec2","","Vector of dimension 2."],[11,"x","","First component of the vector.",11],[11,"y","","Second component of the vector.",11],[1,"Vec3","","Vector of dimension 3."],[11,"x","","First component of the vector.",12],[11,"y","","Second component of the vector.",12],[11,"z","","Third component of the vector.",12],[1,"Vec4","","Vector of dimension 4."],[11,"x","","First component of the vector.",13],[11,"y","","Second component of the vector.",13],[11,"z","","Third component of the vector.",13],[11,"w","","Fourth component of the vector.",13],[1,"Vec5","","Vector of dimension 5."],[11,"x","","First component of the vector.",14],[11,"y","","Second component of the vector.",14],[11,"z","","Third component of the vector.",14],[11,"w","","Fourth component of the vector.",14],[11,"a","","Fifth of the vector.",14],[1,"Vec6","","Vector of dimension 6."],[11,"x","","First component of the vector.",15],[11,"y","","Second component of the vector.",15],[11,"z","","Third component of the vector.",15],[11,"w","","Fourth component of the vector.",15],[11,"a","","Fifth of the vector.",15],[11,"b","","Sixth component of the vector.",15],[2,"PartialOrdering","","Result of a partial ordering."],[12,"PartialLess","","Result of a strict comparison.",16],[12,"PartialEqual","","Equality relationship.",16],[12,"PartialGreater","","Result of a strict comparison.",16],[12,"NotComparable","","Result of a comparison between two objects that are not comparable.",16],[3,"qr","","QR decomposition using Householder reflections."],[3,"eigen_qr","","Eigendecomposition of a square matrix using the qr algorithm."],[3,"householder_matrix","","Get the householder matrix corresponding to a reflexion to the hyperplane\ndefined by `vec`. It can be a reflexion contained in a subspace."],[3,"clamp","","Change the input value to ensure it is on the range `[min, max]`."],[3,"max","","Same as `cmp::max`."],[3,"min","","Same as `cmp::min`."],[3,"inf","","Returns the infimum of `a` and `b`."],[3,"sup","","Returns the supremum of `a` and `b`."],[3,"partial_cmp","","Compare `a` and `b` using a partial ordering relation."],[3,"partial_lt","","Returns `true` iff `a` and `b` are comparable and `a < b`."],[3,"partial_le","","Returns `true` iff `a` and `b` are comparable and `a <= b`."],[3,"partial_gt","","Returns `true` iff `a` and `b` are comparable and `a > b`."],[3,"partial_ge","","Returns `true` iff `a` and `b` are comparable and `a >= b`."],[3,"partial_min","","Return the minimum of `a` and `b` if they are comparable."],[3,"partial_max","","Return the maximum of `a` and `b` if they are comparable."],[3,"partial_clamp","","Clamp `value` between `min` and `max`. Returns `None` if `value` is not comparable to\n`min` or `max`."],[3,"identity","","Create a special identity object."],[3,"zero","","Create a zero-valued value."],[3,"one","","Create a one-valued value."],[3,"perspective3d","","Computes a projection matrix given the frustrum near plane width, height, the field of\nview, and the distance to the clipping planes (`znear` and `zfar`)."],[3,"translation","","Gets the translation applicable by `m`."],[3,"inv_translation","","Gets the inverse translation applicable by `m`."],[3,"append_translation","","Applies the translation `v` to a copy of `m`."],[3,"translate","","Applies a translation to a vector."],[3,"inv_translate","","Applies an inverse translation to a vector."],[3,"rotation","","Gets the rotation applicable by `m`."],[3,"inv_rotation","","Gets the inverse rotation applicable by `m`."],[3,"append_rotation","","Applies the rotation `v` to a copy of `m`."],[3,"prepend_rotation","","Pre-applies the rotation `v` to a copy of `m`."],[3,"rotate","","Applies a rotation to a vector."],[3,"inv_rotate","","Applies an inverse rotation to a vector."],[3,"append_rotation_wrt_point","","Rotates a copy of `m` by `amount` using `center` as the pivot point."],[3,"append_rotation_wrt_center","","Rotates a copy of `m` by `amount` using `m.translation()` as the pivot point."],[3,"to_rot_mat","","Builds a rotation matrix from `r`."],[3,"absolute_rotate","","Applies a rotation using the absolute values of its components."],[3,"transformation","","Gets the transformation applicable by `m`."],[3,"inv_transformation","","Gets the inverse transformation applicable by `m`."],[3,"append_transformation","","Gets a transformed copy of `m`."],[3,"transform","","Applies a transformation to a vector."],[3,"inv_transform","","Applies an inverse transformation to a vector."],[3,"dot","","Computes the dot product of two vectors."],[3,"sub_dot","","Computes a subtraction followed by a dot product."],[3,"norm","","Computes the L2 norm of a vector."],[3,"sqnorm","","Computes the squared L2 norm of a vector."],[3,"normalize","","Gets the normalized version of a vector."],[3,"det","","Computes the determinant of a square matrix."],[3,"cross","","Computes the cross product of two vectors."],[3,"cross_matrix","","Given a vector, computes the matrix which, when multiplied by another vector, computes a cross\nproduct."],[3,"to_homogeneous","","Converts a matrix or vector to homogeneous coordinates."],[3,"from_homogeneous","","Converts a matrix or vector from homogeneous coordinates."],[3,"sample_sphere","","Samples the unit sphere living on the dimension as the samples types."],[3,"approx_eq","","Tests approximate equality."],[3,"approx_eq_eps","","Tests approximate equality using a custom epsilon."],[3,"abs","","Computes a component-wise absolute value."],[3,"inv","","Gets an inverted copy of a matrix."],[3,"transpose","","Gets a transposed copy of a matrix."],[3,"outer","","Computes the outer product of two vectors."],[3,"cov","","Computes the covariance of a set of observations."],[3,"mean","","Computes the mean of a set of observations."],[3,"new_identity","","Construct the identity matrix for a given dimension"],[3,"canonical_basis","","Computes the canonical basis for a given dimension."],[3,"orthonormal_subspace_basis","","Computes the basis of the orthonormal subspace of a given vector."],[3,"diag","","Gets the diagonal of a square matrix."],[3,"dim","","Gets the dimension an object lives in."],[3,"cast","","Converts an object from one type to another."],[0,"overload","","Traits to work around the language limitations related to operator overloading."],[6,"Vec1MulRhs","nalgebra::na::overload",""],[9,"binop","","Applies the binary operation represented by this trait.",17],[6,"Vec2MulRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",18],[6,"Vec3MulRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",19],[6,"Vec4MulRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",20],[6,"Vec5MulRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",21],[6,"Vec6MulRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",22],[6,"Vec1DivRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",23],[6,"Vec2DivRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",24],[6,"Vec3DivRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",25],[6,"Vec4DivRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",26],[6,"Vec5DivRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",27],[6,"Vec6DivRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",28],[6,"Vec1AddRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",29],[6,"Vec2AddRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",30],[6,"Vec3AddRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",31],[6,"Vec4AddRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",32],[6,"Vec5AddRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",33],[6,"Vec6AddRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",34],[6,"Vec1SubRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",35],[6,"Vec2SubRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",36],[6,"Vec3SubRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",37],[6,"Vec4SubRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",38],[6,"Vec5SubRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",39],[6,"Vec6SubRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",40],[6,"Mat1MulRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",41],[6,"Mat2MulRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",42],[6,"Mat3MulRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",43],[6,"Mat4MulRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",44],[6,"Mat5MulRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",45],[6,"Mat6MulRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",46],[6,"Mat1DivRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",47],[6,"Mat2DivRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",48],[6,"Mat3DivRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",49],[6,"Mat4DivRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",50],[6,"Mat5DivRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",51],[6,"Mat6DivRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",52],[6,"Mat1AddRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",53],[6,"Mat2AddRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",54],[6,"Mat3AddRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",55],[6,"Mat4AddRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",56],[6,"Mat5AddRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",57],[6,"Mat6AddRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",58],[6,"Mat1SubRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",59],[6,"Mat2SubRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",60],[6,"Mat3SubRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",61],[6,"Mat4SubRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",62],[6,"Mat5SubRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",63],[6,"Mat6SubRhs","",""],[9,"binop","","Applies the binary operation represented by this trait.",64],[6,"Absolute","nalgebra::na","Trait of objects having an absolute value.\nThis is useful if the object does not have the same type as its absolute value."],[9,"abs","","Computes some absolute value of this object.\nTypically, this will make all component of a matrix or vector positive.",65],[6,"AbsoluteRotate","","Composition of a rotation and an absolute value."],[9,"absolute_rotate","","This is the same as:",66],[6,"AnyVec","","Trait grouping most common operations on vectors."],[6,"ApproxEq","","Trait for testing approximate equality"],[9,"approx_epsilon","","Default epsilon for approximation.",67],[9,"approx_eq_eps","","Tests approximate equality using a custom epsilon.",67],[10,"approx_eq","","Tests approximate equality.",67],[6,"Basis","","Traits of objects which can form a basis (typically vectors)."],[9,"canonical_basis","","Iterates through the canonical basis of the space in which this object lives.",68],[9,"orthonormal_subspace_basis","","Iterates through a basis of the subspace orthogonal to `self`.",68],[6,"Cast","","Traits of objects which can be created from an object of type `T`."],[9,"from","","Converts an element of type `T` to an element of type `Self`.",69],[6,"Col","","Trait to access columns of a matrix or vector."],[9,"ncols","","The number of column of this matrix or vector.",70],[9,"col","","Reads the `i`-th column of `self`.",70],[9,"set_col","","Writes the `i`-th column of `self`.",70],[6,"ColSlice","","Trait to access part of a column of a matrix"],[9,"col_slice","","Returns a view to a slice of a column of a matrix.",71],[6,"RowSlice","","Trait to access part of a row of a matrix"],[9,"row_slice","","Returns a view to a slice of a row of a matrix.",72],[6,"Cov","","Trait for computing the covariance of a set of data."],[9,"cov","","Computes the covariance of the obsevations stored by `m`:",73],[10,"cov_to","","Computes the covariance of the obsevations stored by `m`:",73],[6,"Cross","","Trait of elements having a cross product."],[9,"cross","","Computes the cross product between two elements (usually vectors).",74],[6,"CrossMatrix","","Trait of elements having a cross product operation which can be expressed as a matrix."],[9,"cross_matrix","","The matrix associated to any cross product with this vector. I.e. `v.cross(anything)` =\n`v.cross_matrix().rmul(anything)`.",75],[6,"Det","","Trait of objects having a determinant. Typically used by square matrices."],[9,"det","","Returns the determinant of `m`.",76],[6,"Diag","","Trait to get the diagonal of square matrices."],[9,"from_diag","","Creates a new matrix with the given diagonal.",77],[9,"set_diag","","Sets the diagonal of this matrix.",77],[9,"diag","","The diagonal of this matrix.",77],[6,"Dim","","Trait of objects having a spacial dimension known at compile time."],[9,"dim","","The dimension of the object.",78],[6,"Dot","","Traits of objects having a dot product."],[9,"dot","","Computes the dot (inner) product of two vectors.",79],[9,"sub_dot","","Short-cut to compute the projection of a point on a vector, but without\ncomputing intermediate vectors.\nThe following equation must be verified:",79],[6,"Eye","","Trait for constructing the identity matrix"],[9,"new_identity","","Return the identity matrix of specified dimension",80],[6,"FloatVec","","Trait of vector with components implementing the `Float` trait."],[6,"FloatVecExt","","Trait grouping uncommon, low-level and borderline (from the mathematical point of view)\noperations on vectors."],[6,"FromHomogeneous","","Traits of objects which can be build from an homogeneous coordinate form."],[9,"from","","Builds an object from its homogeneous coordinate form.",81],[6,"Indexable","","This is a workaround of current Rust limitations."],[9,"at","","Reads the `i`-th element of `self`.",82],[9,"set","","Writes to the `i`-th element of `self`.",82],[9,"swap","","Swaps the `i`-th element of `self` with its `j`-th element.",82],[9,"shape","","Returns the shape of the iterable range.",82],[9,"unsafe_at","","Reads the `i`-th element of `self`.",82],[9,"unsafe_set","","Writes to the `i`-th element of `self`.",82],[6,"Inv","","Trait of objects having an inverse. Typically used to implement matrix inverse."],[9,"inv_cpy","","Returns the inverse of `m`.",83],[9,"inv","","In-place version of `inverse`.",83],[6,"Iterable","","This is a workaround of current Rust limitations."],[9,"iter","","Gets a vector-like read-only iterator.",84],[6,"IterableMut","","This is a workaround of current Rust limitations."],[9,"mut_iter","","Gets a vector-like read-write iterator.",85],[6,"LMul","","Trait of objects having a left multiplication with another element."],[9,"lmul","","Computes `v * self`",86],[6,"Mat","","Trait of matrices."],[6,"Mean","","Trait for computing the covariance of a set of data."],[9,"mean","","Computes the mean of the observations stored by `v`.\n \n  * For matrices, observations are stored in its rows.\n  * For vectors, observations are stored in its components (thus are 1-dimensional).",87],[6,"Norm","","Traits of objects having an euclidian norm."],[10,"norm","","Computes the norm of `self`.",88],[9,"sqnorm","","Computes the squared norm of `self`.",88],[9,"normalize_cpy","","Gets the normalized version of a copy of `v`.",88],[9,"normalize","","Normalizes `self`.",88],[6,"Outer","","Traits of objects having an outer product."],[9,"outer","","Computes the outer product: `a * b`",89],[6,"PartialOrd","","Pointwise ordering operations."],[9,"inf","","Returns the infimum of `a` and `b`.",90],[9,"sup","","Returns the supremum of `a` and `b`.",90],[9,"partial_cmp","","Compare `a` and `b` using a partial ordering relation.",90],[10,"partial_le","","Returns `true` iff `a` and `b` are comparable and `a <= b`.",90],[10,"partial_lt","","Returns `true` iff `a` and `b` are comparable and `a < b`.",90],[10,"partial_ge","","Returns `true` iff `a` and `b` are comparable and `a >= b`.",90],[10,"partial_gt","","Returns `true` iff `a` and `b` are comparable and `a > b`.",90],[10,"partial_min","","Return the minimum of `a` and `b` if they are comparable.",90],[10,"partial_max","","Return the maximum of `a` and `b` if they are comparable.",90],[10,"partial_clamp","","Clamp `value` between `min` and `max`. Returns `None` if `value` is not comparable to\n`min` or `max`.",90],[6,"RMul","","Trait of objects having a right multiplication with another element."],[9,"rmul","","Computes `self * v`",91],[6,"Rotate","","Trait of objects able to rotate other objects."],[9,"rotate","","Applies a rotation to `v`.",92],[9,"inv_rotate","","Applies an inverse rotation to `v`.",92],[6,"Rotation","","Trait of object which can represent a rotation, and to which new rotations can be appended. A\nrotation is assumed to be an isometry without translation and without reflexion."],[9,"rotation","","Gets the rotation associated with `self`.",93],[9,"inv_rotation","","Gets the inverse rotation associated with `self`.",93],[9,"append_rotation","","Appends a rotation to this object.",93],[9,"append_rotation_cpy","","Appends the rotation `amount` to a copy of `t`.",93],[9,"prepend_rotation","","Prepends a rotation to this object.",93],[9,"prepend_rotation_cpy","","Prepends the rotation `amount` to a copy of `t`.",93],[9,"set_rotation","","Sets the rotation of `self`.",93],[6,"RotationMatrix","","Trait of transformation having a rotation extractable as a rotation matrix. This can typically\nbe implemented by quaternions to convert them to a rotation matrix."],[9,"to_rot_mat","","Gets the rotation matrix represented by `self`.",94],[6,"RotationWithTranslation","","Various composition of rotation and translation."],[10,"append_rotation_wrt_point_cpy","","Applies a rotation centered on a specific point.",95],[10,"append_rotation_wrt_point","","Rotates `self` using a specific center of rotation.",95],[10,"append_rotation_wrt_center_cpy","","Applies a rotation centered on the translation of `m`.\n \n# Arguments\n  * `t` - the object to be rotated.\n  * `amount` - the rotation to apply.",95],[10,"append_rotation_wrt_center","","Applies a rotation centered on the translation of `m`.",95],[6,"Row","","Trait to access rows of a matrix or a vector."],[9,"nrows","","The number of column of `self`.",96],[9,"row","","Reads the `i`-th row of `self`.",96],[9,"set_row","","Writes the `i`-th row of `self`.",96],[6,"ScalarAdd","","Trait of objects having an addition with a scalar."],[9,"add_s","","Gets the result of `self + n`.",97],[6,"ScalarSub","","Trait of objects having a subtraction with a scalar."],[9,"sub_s","","Gets the result of `self - n`.",98],[6,"ScalarMul","","Trait of objects having a multiplication with a scalar."],[9,"mul_s","","Gets the result of `self * n`.",99],[6,"ScalarDiv","","Trait of objects having a division by a scalar."],[9,"div_s","","Gets the result of `self / n`.",100],[6,"ToHomogeneous","","Traits of objects which can be put in homogeneous coordinates form."],[9,"to_homogeneous","","Gets the homogeneous coordinates form of this object.",101],[6,"Transform","","Trait of objects able to transform other objects."],[9,"transform","","Applies a transformation to `v`.",102],[9,"inv_transform","","Applies an inverse transformation to `v`.",102],[6,"Transformation","","Trait of object which represent a transformation, and to which new transformations can\nbe appended."],[9,"transformation","","Gets the transformation of `self`.",103],[9,"inv_transformation","","Gets the inverse transformation of `self`.",103],[9,"append_transformation","","Appends a transformation to this object.",103],[9,"append_transformation_cpy","","Appends the transformation `amount` to a copy of `t`.",103],[9,"prepend_transformation","","Prepends a transformation to this object.",103],[9,"prepend_transformation_cpy","","Prepends the transformation `amount` to a copy of `t`.",103],[9,"set_transformation","","Sets the transformation of `self`.",103],[6,"Translate","","Trait of objects able to rotate other objects. This is typically implemented by matrices which\nrotate vectors."],[9,"translate","","Apply a translation to an object.",104],[9,"inv_translate","","Apply an inverse translation to an object.",104],[6,"Translation","","Trait of object which represent a translation, and to wich new translation\ncan be appended."],[9,"translation","","Gets the translation associated with this object.",105],[9,"inv_translation","","Gets the inverse translation associated with this object.",105],[9,"append_translation","","Appends a translation to this object.",105],[9,"append_translation_cpy","","Appends the translation `amount` to a copy of `t`.",105],[9,"prepend_translation","","Prepends a translation to this object.",105],[9,"prepend_translation_cpy","","Prepends the translation `amount` to a copy of `t`.",105],[9,"set_translation","","Sets the translation.",105],[6,"Transpose","","Trait of objects which can be transposed."],[9,"transpose_cpy","","Computes the transpose of a matrix.",106],[9,"transpose","","In-place version of `transposed`.",106],[6,"UniformSphereSample","","Trait of vectors able to sample a unit sphere."],[9,"sample","","Iterate through the samples.",107],[6,"VecExt","","Trait grouping uncommon, low-level and borderline (from the mathematical point of view)\noperations on vectors."]],"paths":[[1,"DVec"],[1,"Iso2"],[1,"Iso3"],[1,"Iso4"],[1,"Mat1"],[1,"Mat2"],[1,"Mat3"],[1,"Mat4"],[1,"Mat5"],[1,"Mat6"],[1,"Vec1"],[1,"Vec2"],[1,"Vec3"],[1,"Vec4"],[1,"Vec5"],[1,"Vec6"],[2,"PartialOrdering"],[6,"Vec1MulRhs"],[6,"Vec2MulRhs"],[6,"Vec3MulRhs"],[6,"Vec4MulRhs"],[6,"Vec5MulRhs"],[6,"Vec6MulRhs"],[6,"Vec1DivRhs"],[6,"Vec2DivRhs"],[6,"Vec3DivRhs"],[6,"Vec4DivRhs"],[6,"Vec5DivRhs"],[6,"Vec6DivRhs"],[6,"Vec1AddRhs"],[6,"Vec2AddRhs"],[6,"Vec3AddRhs"],[6,"Vec4AddRhs"],[6,"Vec5AddRhs"],[6,"Vec6AddRhs"],[6,"Vec1SubRhs"],[6,"Vec2SubRhs"],[6,"Vec3SubRhs"],[6,"Vec4SubRhs"],[6,"Vec5SubRhs"],[6,"Vec6SubRhs"],[6,"Mat1MulRhs"],[6,"Mat2MulRhs"],[6,"Mat3MulRhs"],[6,"Mat4MulRhs"],[6,"Mat5MulRhs"],[6,"Mat6MulRhs"],[6,"Mat1DivRhs"],[6,"Mat2DivRhs"],[6,"Mat3DivRhs"],[6,"Mat4DivRhs"],[6,"Mat5DivRhs"],[6,"Mat6DivRhs"],[6,"Mat1AddRhs"],[6,"Mat2AddRhs"],[6,"Mat3AddRhs"],[6,"Mat4AddRhs"],[6,"Mat5AddRhs"],[6,"Mat6AddRhs"],[6,"Mat1SubRhs"],[6,"Mat2SubRhs"],[6,"Mat3SubRhs"],[6,"Mat4SubRhs"],[6,"Mat5SubRhs"],[6,"Mat6SubRhs"],[6,"Absolute"],[6,"AbsoluteRotate"],[6,"ApproxEq"],[6,"Basis"],[6,"Cast"],[6,"Col"],[6,"ColSlice"],[6,"RowSlice"],[6,"Cov"],[6,"Cross"],[6,"CrossMatrix"],[6,"Det"],[6,"Diag"],[6,"Dim"],[6,"Dot"],[6,"Eye"],[6,"FromHomogeneous"],[6,"Indexable"],[6,"Inv"],[6,"Iterable"],[6,"IterableMut"],[6,"LMul"],[6,"Mean"],[6,"Norm"],[6,"Outer"],[6,"PartialOrd"],[6,"RMul"],[6,"Rotate"],[6,"Rotation"],[6,"RotationMatrix"],[6,"RotationWithTranslation"],[6,"Row"],[6,"ScalarAdd"],[6,"ScalarSub"],[6,"ScalarMul"],[6,"ScalarDiv"],[6,"ToHomogeneous"],[6,"Transform"],[6,"Transformation"],[6,"Translate"],[6,"Translation"],[6,"Transpose"],[6,"UniformSphereSample"]]};
initSearch(searchIndex);
