var searchIndex = {};
searchIndex['nalgebra'] = {"items":[[0,"","nalgebra","# nalgebra"],[1,"Identity","","Special identity matrix. All its operation are no-ops."],[1,"DMat","","Matrix with dimensions unknown at compile-time."],[1,"DVec","","Heap allocated, dynamically sized vector."],[11,"at","","Components of the vector. Contains as much elements as the vector dimension.",0],[1,"DVec1","","Stack-allocated, dynamically sized vector with a maximum size of 1."],[1,"DVec2","","Stack-allocated, dynamically sized vector with a maximum size of 2."],[1,"DVec3","","Stack-allocated, dynamically sized vector with a maximum size of 3."],[1,"DVec4","","Stack-allocated, dynamically sized vector with a maximum size of 4."],[1,"DVec5","","Stack-allocated, dynamically sized vector with a maximum size of 5."],[1,"DVec6","","Stack-allocated, dynamically sized vector with a maximum size of 6."],[1,"Iso2","","Two dimensional isometry."],[11,"rotation","","The rotation applicable by this isometry.",1],[11,"translation","","The translation applicable by this isometry.",1],[1,"Iso3","","Three dimensional isometry."],[11,"rotation","","The rotation applicable by this isometry.",2],[11,"translation","","The translation applicable by this isometry.",2],[1,"Iso4","","Four dimensional isometry."],[11,"rotation","","The rotation applicable by this isometry.",3],[11,"translation","","The translation applicable by this isometry.",3],[1,"Mat1","","Square matrix of dimension 1."],[11,"m11","","",4],[1,"Mat2","","Square matrix of dimension 2."],[11,"m11","","",5],[11,"m21","","",5],[11,"m12","","",5],[11,"m22","","",5],[1,"Mat3","","Square matrix of dimension 3."],[11,"m11","","",6],[11,"m21","","",6],[11,"m31","","",6],[11,"m12","","",6],[11,"m22","","",6],[11,"m32","","",6],[11,"m13","","",6],[11,"m23","","",6],[11,"m33","","",6],[1,"Mat4","","Square matrix of dimension 4."],[11,"m11","","",7],[11,"m21","","",7],[11,"m31","","",7],[11,"m41","","",7],[11,"m12","","",7],[11,"m22","","",7],[11,"m32","","",7],[11,"m42","","",7],[11,"m13","","",7],[11,"m23","","",7],[11,"m33","","",7],[11,"m43","","",7],[11,"m14","","",7],[11,"m24","","",7],[11,"m34","","",7],[11,"m44","","",7],[1,"Mat5","","Square matrix of dimension 5."],[11,"m11","","",8],[11,"m21","","",8],[11,"m31","","",8],[11,"m41","","",8],[11,"m51","","",8],[11,"m12","","",8],[11,"m22","","",8],[11,"m32","","",8],[11,"m42","","",8],[11,"m52","","",8],[11,"m13","","",8],[11,"m23","","",8],[11,"m33","","",8],[11,"m43","","",8],[11,"m53","","",8],[11,"m14","","",8],[11,"m24","","",8],[11,"m34","","",8],[11,"m44","","",8],[11,"m54","","",8],[11,"m15","","",8],[11,"m25","","",8],[11,"m35","","",8],[11,"m45","","",8],[11,"m55","","",8],[1,"Mat6","","Square matrix of dimension 6."],[11,"m11","","",9],[11,"m21","","",9],[11,"m31","","",9],[11,"m41","","",9],[11,"m51","","",9],[11,"m61","","",9],[11,"m12","","",9],[11,"m22","","",9],[11,"m32","","",9],[11,"m42","","",9],[11,"m52","","",9],[11,"m62","","",9],[11,"m13","","",9],[11,"m23","","",9],[11,"m33","","",9],[11,"m43","","",9],[11,"m53","","",9],[11,"m63","","",9],[11,"m14","","",9],[11,"m24","","",9],[11,"m34","","",9],[11,"m44","","",9],[11,"m54","","",9],[11,"m64","","",9],[11,"m15","","",9],[11,"m25","","",9],[11,"m35","","",9],[11,"m45","","",9],[11,"m55","","",9],[11,"m65","","",9],[11,"m16","","",9],[11,"m26","","",9],[11,"m36","","",9],[11,"m46","","",9],[11,"m56","","",9],[11,"m66","","",9],[1,"Rot2","","Two dimensional rotation matrix."],[1,"Rot3","","Three dimensional rotation matrix."],[1,"Rot4","","Four dimensional rotation matrix."],[1,"Vec0","","Vector of dimension 0."],[1,"Vec1","","Vector of dimension 1."],[11,"x","","First component of the vector.",10],[1,"Vec2","","Vector of dimension 2."],[11,"x","","First component of the vector.",11],[11,"y","","Second component of the vector.",11],[1,"Vec3","","Vector of dimension 3."],[11,"x","","First component of the vector.",12],[11,"y","","Second component of the vector.",12],[11,"z","","Third component of the vector.",12],[1,"Vec4","","Vector of dimension 4."],[11,"x","","First component of the vector.",13],[11,"y","","Second component of the vector.",13],[11,"z","","Third component of the vector.",13],[11,"w","","Fourth component of the vector.",13],[1,"Vec5","","Vector of dimension 5."],[11,"x","","First component of the vector.",14],[11,"y","","Second component of the vector.",14],[11,"z","","Third component of the vector.",14],[11,"w","","Fourth component of the vector.",14],[11,"a","","Fifth of the vector.",14],[1,"Vec6","","Vector of dimension 6."],[11,"x","","First component of the vector.",15],[11,"y","","Second component of the vector.",15],[11,"z","","Third component of the vector.",15],[11,"w","","Fourth component of the vector.",15],[11,"a","","Fifth of the vector.",15],[11,"b","","Sixth component of the vector.",15],[1,"Pnt0","","Point of dimension 0."],[1,"Pnt1","","Point of dimension 1."],[11,"x","","First component of the point.",16],[1,"Pnt2","","Point of dimension 2."],[11,"x","","First component of the point.",17],[11,"y","","Second component of the point.",17],[1,"Pnt3","","Point of dimension 3."],[11,"x","","First component of the point.",18],[11,"y","","Second component of the point.",18],[11,"z","","Third component of the point.",18],[1,"Pnt4","","Point of dimension 4."],[11,"x","","First component of the point.",19],[11,"y","","Second component of the point.",19],[11,"z","","Third component of the point.",19],[11,"w","","Fourth component of the point.",19],[1,"Pnt5","","Point of dimension 5."],[11,"x","","First component of the point.",20],[11,"y","","Second component of the point.",20],[11,"z","","Third component of the point.",20],[11,"w","","Fourth component of the point.",20],[11,"a","","Fifth of the point.",20],[1,"Pnt6","","Point of dimension 6."],[11,"x","","First component of the point.",21],[11,"y","","Second component of the point.",21],[11,"z","","Third component of the point.",21],[11,"w","","Fourth component of the point.",21],[11,"a","","Fifth of the point.",21],[11,"b","","Sixth component of the point.",21],[1,"Persp3","","A 3D perspective projection stored without any matrix."],[1,"PerspMat3","","A 3D perspective projection stored as a 4D matrix."],[1,"Ortho3","","A 3D orthographic projection stored without any matrix."],[1,"OrthoMat3","","A 3D orthographic projection stored as a 4D matrix."],[1,"Quat","","A quaternion."],[11,"w","","The scalar component of the quaternion.",22],[11,"i","","The first vector component of the quaternion.",22],[11,"j","","The second vector component of the quaternion.",22],[11,"k","","The third vector component of the quaternion.",22],[1,"UnitQuat","","A unit quaternion that can represent a 3D rotation."],[2,"POrdering","","Result of a partial ordering."],[12,"PartialLess","","Result of a strict comparison.",23],[12,"PartialEqual","","Equality relationship.",23],[12,"PartialGreater","","Result of a strict comparison.",23],[12,"NotComparable","","Result of a comparison between two objects that are not comparable.",23],[3,"qr","","QR decomposition using Householder reflections."],[3,"householder_matrix","","Get the householder matrix corresponding to a reflexion to the hyperplane\ndefined by `vec`. It can be a reflexion contained in a subspace."],[3,"clamp","","Change the input value to ensure it is on the range `[min, max]`."],[3,"max","","Same as `cmp::max`."],[3,"min","","Same as `cmp::min`."],[3,"inf","","Returns the infimum of `a` and `b`."],[3,"sup","","Returns the supremum of `a` and `b`."],[3,"partial_cmp","","Compare `a` and `b` using a partial ordering relation."],[3,"partial_lt","","Returns `true` iff `a` and `b` are comparable and `a < b`."],[3,"partial_le","","Returns `true` iff `a` and `b` are comparable and `a <= b`."],[3,"partial_gt","","Returns `true` iff `a` and `b` are comparable and `a > b`."],[3,"partial_ge","","Returns `true` iff `a` and `b` are comparable and `a >= b`."],[3,"partial_min","","Return the minimum of `a` and `b` if they are comparable."],[3,"partial_max","","Return the maximum of `a` and `b` if they are comparable."],[3,"partial_clamp","","Clamp `value` between `min` and `max`. Returns `None` if `value` is not comparable to\n`min` or `max`."],[3,"identity","","Create a special identity object."],[3,"zero","","Create a zero-valued value."],[3,"is_zero","","Tests is a value is iqual to zero."],[3,"one","","Create a one-valued value."],[3,"orig","","Returns the trivial origin of an affine space."],[3,"center","","Returns the center of two points."],[3,"dist","","Returns the distance between two points."],[3,"sqdist","","Returns the squared distance between two points."],[3,"perspective3d","","Computes a projection matrix given the frustrum near plane width, height, the field of\nview, and the distance to the clipping planes (`znear` and `zfar`)."],[3,"translation","","Gets the translation applicable by `m`."],[3,"inv_translation","","Gets the inverse translation applicable by `m`."],[3,"append_translation","","Applies the translation `v` to a copy of `m`."],[3,"translate","","Applies a translation to a point."],[3,"inv_translate","","Applies an inverse translation to a point."],[3,"rotation","","Gets the rotation applicable by `m`."],[3,"inv_rotation","","Gets the inverse rotation applicable by `m`."],[3,"append_rotation","","Applies the rotation `v` to a copy of `m`."],[3,"prepend_rotation","","Pre-applies the rotation `v` to a copy of `m`."],[3,"rotate","","Applies a rotation to a vector."],[3,"inv_rotate","","Applies an inverse rotation to a vector."],[3,"append_rotation_wrt_point","","Rotates a copy of `m` by `amount` using `center` as the pivot point."],[3,"append_rotation_wrt_center","","Rotates a copy of `m` by `amount` using `m.translation()` as the pivot point."],[3,"to_rot_mat","","Builds a rotation matrix from `r`."],[3,"absolute_rotate","","Applies a rotation using the absolute values of its components."],[3,"transformation","","Gets the transformation applicable by `m`."],[3,"inv_transformation","","Gets the inverse transformation applicable by `m`."],[3,"append_transformation","","Gets a transformed copy of `m`."],[3,"transform","","Applies a transformation to a vector."],[3,"inv_transform","","Applies an inverse transformation to a vector."],[3,"dot","","Computes the dot product of two vectors."],[3,"norm","","Computes the L2 norm of a vector."],[3,"sqnorm","","Computes the squared L2 norm of a vector."],[3,"normalize","","Gets the normalized version of a vector."],[3,"det","","Computes the determinant of a square matrix."],[3,"cross","","Computes the cross product of two vectors."],[3,"cross_matrix","","Given a vector, computes the matrix which, when multiplied by another vector, computes a cross\nproduct."],[3,"to_homogeneous","","Converts a matrix or vector to homogeneous coordinates."],[3,"from_homogeneous","","Converts a matrix or vector from homogeneous coordinates."],[3,"sample_sphere","","Samples the unit sphere living on the dimension as the samples types."],[3,"approx_eq","","Tests approximate equality."],[3,"approx_eq_eps","","Tests approximate equality using a custom epsilon."],[3,"abs","","Computes a component-wise absolute value."],[3,"inv","","Gets an inverted copy of a matrix."],[3,"transpose","","Gets a transposed copy of a matrix."],[3,"outer","","Computes the outer product of two vectors."],[3,"cov","","Computes the covariance of a set of observations."],[3,"mean","","Computes the mean of a set of observations."],[3,"eigen_qr","","Computes the eigenvalues and eigenvectors of a square matrix usin the QR algorithm."],[3,"new_identity","","Construct the identity matrix for a given dimension"],[3,"canonical_basis","","Computes the canonical basis for a given dimension."],[3,"orthonormal_subspace_basis","","Computes the basis of the orthonormal subspace of a given vector."],[3,"canonical_basis_element","","Gets the (0-based) i-th element of the canonical basis of V."],[3,"diag","","Gets the diagonal of a square matrix."],[3,"dim","","Gets the dimension an object lives in."],[3,"shape","","Gets the indexable range of an object."],[3,"cast","","Converts an object from one type to another."],[10,"clone","","",24],[10,"eq","","",24],[10,"ne","","",24],[10,"new_uninitialized","","Creates an uninitialized matrix.",24],[10,"new_zeros","","Builds a matrix filled with zeros.",24],[10,"is_zero","","Tests if all components of the matrix are zeroes.",24],[10,"reset","","",24],[10,"new_random","","Builds a matrix filled with random values.",24],[10,"new_ones","","Builds a matrix filled with a given constant.",24],[10,"from_elem","","Builds a matrix filled with a given constant.",24],[10,"from_row_vec","","Builds a matrix filled with the components provided by a vector.\nThe vector contains the matrix data in row-major order.\nNote that `from_col_vec` is a lot faster than `from_row_vec` since a `DMat` stores its data\nin column-major order.",24],[10,"from_col_vec","","Builds a matrix filled with the components provided by a vector.\nThe vector contains the matrix data in column-major order.\nNote that `from_col_vec` is a lot faster than `from_row_vec` since a `DMat` stores its data\nin column-major order.",24],[10,"from_fn","","Builds a matrix filled with a given constant.",24],[10,"nrows","","The number of row on the matrix.",24],[10,"ncols","","The number of columns on the matrix.",24],[10,"to_vec","","Transforms this matrix isizeo an array. This consumes the matrix and is O(1).\nThe returned vector contains the matrix data in column-major order.",24],[10,"as_vec","","Gets a reference to this matrix data.\nThe returned vector contains the matrix data in column-major order.",24],[10,"as_mut_vec","","Gets a mutable reference to this matrix data.\nThe returned vector contains the matrix data in column-major order.",24],[10,"new_identity","","Builds an identity matrix.",24],[10,"set","","Changes the value of a component of the matrix.",24],[10,"unsafe_set","","Just like `set` without bounds checking.",24],[10,"at","","Reads the value of a component of the matrix.",24],[10,"unsafe_at","","Just like `at` without bounds checking.",24],[10,"swap","","",24],[10,"shape","","",24],[10,"index","","",24],[10,"index_mut","","",24],[10,"mul","","",24],[10,"mul","","",24],[10,"mul","","",0],[10,"inv_cpy","","",24],[10,"inv","","",24],[10,"transpose_cpy","","",24],[10,"transpose","","",24],[10,"mean","","",24],[10,"cov","","",24],[10,"col_slice","","",24],[10,"row_slice","","",24],[10,"from_diag","","",24],[10,"set_diag","","",24],[10,"diag","","",24],[10,"approx_epsilon","","",24],[10,"approx_ulps","","",24],[10,"approx_eq_eps","","",24],[10,"approx_eq_ulps","","",24],[10,"fmt","","",24],[10,"mul","","",24],[10,"div","","",24],[10,"add","","",24],[10,"sub","","",24],[10,"clone","","",0],[10,"fmt","","",0],[10,"eq","","",0],[10,"ne","","",0],[10,"new_uninitialized","","Creates an uninitialized vec.",0],[10,"from_elem","","Builds a vector filled with a constant.",0],[10,"from_slice","","Builds a vector filled with the components provided by a vector.",0],[10,"from_fn","","Builds a vector filled with the result of a function.",0],[10,"len","","",0],[10,"from_iter","","",0],[10,"new_zeros","","Builds a vector filled with zeros.",0],[10,"is_zero","","Tests if all components of the vector are zeroes.",0],[10,"as_slice","","Slices this vector.",0],[10,"as_mut_slice","","Mutably slices this vector.",0],[10,"shape","","",0],[10,"at","","",0],[10,"set","","",0],[10,"swap","","",0],[10,"unsafe_at","","",0],[10,"unsafe_set","","",0],[10,"index","","",0],[10,"index_mut","","",0],[10,"new_ones","","Builds a vector filled with ones.",0],[10,"new_random","","Builds a vector filled with random values.",0],[10,"iter","","",0],[10,"iter_mut","","",0],[10,"axpy","","",0],[10,"canonical_basis_with_dim","","Computes the canonical basis for the given dimension. A canonical basis is a set of\nvectors, mutually orthogonal, with all its component equal to 0.0 except one which is equal\nto 1.0.",0],[10,"orthogonal_subspace_basis","","Computes a basis of the space orthogonal to the vector. If the input vector is of dimension\n`n`, this will return `n - 1` vectors.",0],[10,"mul","","",0],[10,"div","","",0],[10,"add","","",0],[10,"sub","","",0],[10,"neg","","",0],[10,"dot","","",0],[10,"sqnorm","","",0],[10,"normalize_cpy","","",0],[10,"normalize","","",0],[10,"approx_epsilon","","",0],[10,"approx_ulps","","",0],[10,"approx_eq_eps","","",0],[10,"approx_eq_ulps","","",0],[10,"mul","","",0],[10,"div","","",0],[10,"add","","",0],[10,"sub","","",0],[10,"len","","",25],[10,"eq","","",25],[10,"clone","","",25],[10,"new_zeros","","Builds a vector filled with zeros.",25],[10,"is_zero","","Tests if all components of the vector are zeroes.",25],[10,"as_slice","","Slices this vector.",25],[10,"as_mut_slice","","Mutably slices this vector.",25],[10,"shape","","",25],[10,"at","","",25],[10,"set","","",25],[10,"swap","","",25],[10,"unsafe_at","","",25],[10,"unsafe_set","","",25],[10,"index","","",25],[10,"index_mut","","",25],[10,"new_ones","","Builds a vector filled with ones.",25],[10,"new_random","","Builds a vector filled with random values.",25],[10,"iter","","",25],[10,"iter_mut","","",25],[10,"axpy","","",25],[10,"canonical_basis_with_dim","","Computes the canonical basis for the given dimension. A canonical basis is a set of\nvectors, mutually orthogonal, with all its component equal to 0.0 except one which is equal\nto 1.0.",25],[10,"orthogonal_subspace_basis","","Computes a basis of the space orthogonal to the vector. If the input vector is of dimension\n`n`, this will return `n - 1` vectors.",25],[10,"mul","","",25],[10,"div","","",25],[10,"add","","",25],[10,"sub","","",25],[10,"neg","","",25],[10,"dot","","",25],[10,"sqnorm","","",25],[10,"normalize_cpy","","",25],[10,"normalize","","",25],[10,"approx_epsilon","","",25],[10,"approx_ulps","","",25],[10,"approx_eq_eps","","",25],[10,"approx_eq_ulps","","",25],[10,"mul","","",25],[10,"div","","",25],[10,"add","","",25],[10,"sub","","",25],[10,"from_elem","","Builds a vector filled with a constant.",25],[10,"from_slice","","Builds a vector filled with the components provided by a vector.",25],[10,"from_fn","","Builds a vector filled with the result of a function.",25],[10,"from_iter","","",25],[10,"len","","",26],[10,"eq","","",26],[10,"clone","","",26],[10,"new_zeros","","Builds a vector filled with zeros.",26],[10,"is_zero","","Tests if all components of the vector are zeroes.",26],[10,"as_slice","","Slices this vector.",26],[10,"as_mut_slice","","Mutably slices this vector.",26],[10,"shape","","",26],[10,"at","","",26],[10,"set","","",26],[10,"swap","","",26],[10,"unsafe_at","","",26],[10,"unsafe_set","","",26],[10,"index","","",26],[10,"index_mut","","",26],[10,"new_ones","","Builds a vector filled with ones.",26],[10,"new_random","","Builds a vector filled with random values.",26],[10,"iter","","",26],[10,"iter_mut","","",26],[10,"axpy","","",26],[10,"canonical_basis_with_dim","","Computes the canonical basis for the given dimension. A canonical basis is a set of\nvectors, mutually orthogonal, with all its component equal to 0.0 except one which is equal\nto 1.0.",26],[10,"orthogonal_subspace_basis","","Computes a basis of the space orthogonal to the vector. If the input vector is of dimension\n`n`, this will return `n - 1` vectors.",26],[10,"mul","","",26],[10,"div","","",26],[10,"add","","",26],[10,"sub","","",26],[10,"neg","","",26],[10,"dot","","",26],[10,"sqnorm","","",26],[10,"normalize_cpy","","",26],[10,"normalize","","",26],[10,"approx_epsilon","","",26],[10,"approx_ulps","","",26],[10,"approx_eq_eps","","",26],[10,"approx_eq_ulps","","",26],[10,"mul","","",26],[10,"div","","",26],[10,"add","","",26],[10,"sub","","",26],[10,"from_elem","","Builds a vector filled with a constant.",26],[10,"from_slice","","Builds a vector filled with the components provided by a vector.",26],[10,"from_fn","","Builds a vector filled with the result of a function.",26],[10,"from_iter","","",26],[10,"len","","",27],[10,"eq","","",27],[10,"clone","","",27],[10,"new_zeros","","Builds a vector filled with zeros.",27],[10,"is_zero","","Tests if all components of the vector are zeroes.",27],[10,"as_slice","","Slices this vector.",27],[10,"as_mut_slice","","Mutably slices this vector.",27],[10,"shape","","",27],[10,"at","","",27],[10,"set","","",27],[10,"swap","","",27],[10,"unsafe_at","","",27],[10,"unsafe_set","","",27],[10,"index","","",27],[10,"index_mut","","",27],[10,"new_ones","","Builds a vector filled with ones.",27],[10,"new_random","","Builds a vector filled with random values.",27],[10,"iter","","",27],[10,"iter_mut","","",27],[10,"axpy","","",27],[10,"canonical_basis_with_dim","","Computes the canonical basis for the given dimension. A canonical basis is a set of\nvectors, mutually orthogonal, with all its component equal to 0.0 except one which is equal\nto 1.0.",27],[10,"orthogonal_subspace_basis","","Computes a basis of the space orthogonal to the vector. If the input vector is of dimension\n`n`, this will return `n - 1` vectors.",27],[10,"mul","","",27],[10,"div","","",27],[10,"add","","",27],[10,"sub","","",27],[10,"neg","","",27],[10,"dot","","",27],[10,"sqnorm","","",27],[10,"normalize_cpy","","",27],[10,"normalize","","",27],[10,"approx_epsilon","","",27],[10,"approx_ulps","","",27],[10,"approx_eq_eps","","",27],[10,"approx_eq_ulps","","",27],[10,"mul","","",27],[10,"div","","",27],[10,"add","","",27],[10,"sub","","",27],[10,"from_elem","","Builds a vector filled with a constant.",27],[10,"from_slice","","Builds a vector filled with the components provided by a vector.",27],[10,"from_fn","","Builds a vector filled with the result of a function.",27],[10,"from_iter","","",27],[10,"len","","",28],[10,"eq","","",28],[10,"clone","","",28],[10,"new_zeros","","Builds a vector filled with zeros.",28],[10,"is_zero","","Tests if all components of the vector are zeroes.",28],[10,"as_slice","","Slices this vector.",28],[10,"as_mut_slice","","Mutably slices this vector.",28],[10,"shape","","",28],[10,"at","","",28],[10,"set","","",28],[10,"swap","","",28],[10,"unsafe_at","","",28],[10,"unsafe_set","","",28],[10,"index","","",28],[10,"index_mut","","",28],[10,"new_ones","","Builds a vector filled with ones.",28],[10,"new_random","","Builds a vector filled with random values.",28],[10,"iter","","",28],[10,"iter_mut","","",28],[10,"axpy","","",28],[10,"canonical_basis_with_dim","","Computes the canonical basis for the given dimension. A canonical basis is a set of\nvectors, mutually orthogonal, with all its component equal to 0.0 except one which is equal\nto 1.0.",28],[10,"orthogonal_subspace_basis","","Computes a basis of the space orthogonal to the vector. If the input vector is of dimension\n`n`, this will return `n - 1` vectors.",28],[10,"mul","","",28],[10,"div","","",28],[10,"add","","",28],[10,"sub","","",28],[10,"neg","","",28],[10,"dot","","",28],[10,"sqnorm","","",28],[10,"normalize_cpy","","",28],[10,"normalize","","",28],[10,"approx_epsilon","","",28],[10,"approx_ulps","","",28],[10,"approx_eq_eps","","",28],[10,"approx_eq_ulps","","",28],[10,"mul","","",28],[10,"div","","",28],[10,"add","","",28],[10,"sub","","",28],[10,"from_elem","","Builds a vector filled with a constant.",28],[10,"from_slice","","Builds a vector filled with the components provided by a vector.",28],[10,"from_fn","","Builds a vector filled with the result of a function.",28],[10,"from_iter","","",28],[10,"len","","",29],[10,"eq","","",29],[10,"clone","","",29],[10,"new_zeros","","Builds a vector filled with zeros.",29],[10,"is_zero","","Tests if all components of the vector are zeroes.",29],[10,"as_slice","","Slices this vector.",29],[10,"as_mut_slice","","Mutably slices this vector.",29],[10,"shape","","",29],[10,"at","","",29],[10,"set","","",29],[10,"swap","","",29],[10,"unsafe_at","","",29],[10,"unsafe_set","","",29],[10,"index","","",29],[10,"index_mut","","",29],[10,"new_ones","","Builds a vector filled with ones.",29],[10,"new_random","","Builds a vector filled with random values.",29],[10,"iter","","",29],[10,"iter_mut","","",29],[10,"axpy","","",29],[10,"canonical_basis_with_dim","","Computes the canonical basis for the given dimension. A canonical basis is a set of\nvectors, mutually orthogonal, with all its component equal to 0.0 except one which is equal\nto 1.0.",29],[10,"orthogonal_subspace_basis","","Computes a basis of the space orthogonal to the vector. If the input vector is of dimension\n`n`, this will return `n - 1` vectors.",29],[10,"mul","","",29],[10,"div","","",29],[10,"add","","",29],[10,"sub","","",29],[10,"neg","","",29],[10,"dot","","",29],[10,"sqnorm","","",29],[10,"normalize_cpy","","",29],[10,"normalize","","",29],[10,"approx_epsilon","","",29],[10,"approx_ulps","","",29],[10,"approx_eq_eps","","",29],[10,"approx_eq_ulps","","",29],[10,"mul","","",29],[10,"div","","",29],[10,"add","","",29],[10,"sub","","",29],[10,"from_elem","","Builds a vector filled with a constant.",29],[10,"from_slice","","Builds a vector filled with the components provided by a vector.",29],[10,"from_fn","","Builds a vector filled with the result of a function.",29],[10,"from_iter","","",29],[10,"len","","",30],[10,"eq","","",30],[10,"clone","","",30],[10,"new_zeros","","Builds a vector filled with zeros.",30],[10,"is_zero","","Tests if all components of the vector are zeroes.",30],[10,"as_slice","","Slices this vector.",30],[10,"as_mut_slice","","Mutably slices this vector.",30],[10,"shape","","",30],[10,"at","","",30],[10,"set","","",30],[10,"swap","","",30],[10,"unsafe_at","","",30],[10,"unsafe_set","","",30],[10,"index","","",30],[10,"index_mut","","",30],[10,"new_ones","","Builds a vector filled with ones.",30],[10,"new_random","","Builds a vector filled with random values.",30],[10,"iter","","",30],[10,"iter_mut","","",30],[10,"axpy","","",30],[10,"canonical_basis_with_dim","","Computes the canonical basis for the given dimension. A canonical basis is a set of\nvectors, mutually orthogonal, with all its component equal to 0.0 except one which is equal\nto 1.0.",30],[10,"orthogonal_subspace_basis","","Computes a basis of the space orthogonal to the vector. If the input vector is of dimension\n`n`, this will return `n - 1` vectors.",30],[10,"mul","","",30],[10,"div","","",30],[10,"add","","",30],[10,"sub","","",30],[10,"neg","","",30],[10,"dot","","",30],[10,"sqnorm","","",30],[10,"normalize_cpy","","",30],[10,"normalize","","",30],[10,"approx_epsilon","","",30],[10,"approx_ulps","","",30],[10,"approx_eq_eps","","",30],[10,"approx_eq_ulps","","",30],[10,"mul","","",30],[10,"div","","",30],[10,"add","","",30],[10,"sub","","",30],[10,"from_elem","","Builds a vector filled with a constant.",30],[10,"from_slice","","Builds a vector filled with the components provided by a vector.",30],[10,"from_fn","","Builds a vector filled with the result of a function.",30],[10,"from_iter","","",30],[10,"fmt","","",31],[10,"rand","","",31],[10,"clone","","",31],[10,"decode","","",31],[10,"eq","","",31],[10,"ne","","",31],[10,"new","","Creates a new vector.",31],[10,"new_repeat","","Creates a new vector. The parameter is not taken in account.",31],[10,"fmt","","",10],[10,"rand","","",10],[10,"hash","","",10],[10,"clone","","",10],[10,"decode","","",10],[10,"encode","","",10],[10,"eq","","",10],[10,"ne","","",10],[10,"new","","Creates a new vector.",10],[10,"inf","","",10],[10,"sup","","",10],[10,"partial_cmp","","",10],[10,"partial_lt","","",10],[10,"partial_le","","",10],[10,"partial_gt","","",10],[10,"partial_ge","","",10],[10,"x","","Create a unit vector with its `$compN` component equal to 1.0.",10],[10,"from","","",10],[10,"as_array","","View this vector as an array.",10],[10,"as_array_mut","","View this vector as a mutable array.",10],[10,"from_array_ref","","View an array as a vector.",10],[10,"from_array_mut","","View an array as a vector.",10],[10,"index","","",10],[10,"index_mut","","",10],[10,"shape","","",10],[10,"at","","",10],[10,"set","","",10],[10,"swap","","",10],[10,"unsafe_at","","",10],[10,"unsafe_set","","",10],[10,"at_fast","","Unsafe read access to a vector element by index.",10],[10,"set_fast","","Unsafe write access to a vector element by index.",10],[10,"new_repeat","","Creates a new vector with all its components equal to a given value.",10],[10,"dim","","",10],[10,"len","","",10],[10,"add","","",10],[10,"sub","","",10],[10,"mul","","",10],[10,"div","","",10],[10,"add","","",10],[10,"sub","","",10],[10,"mul","","",10],[10,"div","","",10],[10,"neg","","",10],[10,"dot","","",10],[10,"mul_s","","",10],[10,"div_s","","",10],[10,"add_s","","",10],[10,"sub_s","","",10],[10,"translation","","",10],[10,"inv_translation","","",10],[10,"append_translation","","",10],[10,"append_translation_cpy","","",10],[10,"prepend_translation","","",10],[10,"prepend_translation_cpy","","",10],[10,"set_translation","","",10],[10,"sqnorm","","",10],[10,"normalize_cpy","","",10],[10,"normalize","","",10],[10,"approx_epsilon","","",10],[10,"approx_ulps","","",10],[10,"approx_eq","","",10],[10,"approx_eq_eps","","",10],[10,"approx_eq_ulps","","",10],[10,"one","","",10],[10,"zero","","",10],[10,"is_zero","","",10],[10,"from_iter","","",10],[10,"max_value","","",10],[10,"min_value","","",10],[10,"axpy","","",10],[10,"iter","","",10],[10,"iter_mut","","",10],[10,"to_homogeneous","","",10],[10,"from","","",10],[10,"translate","","",10],[10,"inv_translate","","",10],[10,"rotate","","",10],[10,"inv_rotate","","",10],[10,"rotate","","",16],[10,"inv_rotate","","",16],[10,"transform","","",10],[10,"inv_transform","","",10],[10,"to_pnt","","",10],[10,"as_pnt","","",10],[10,"to_pnt","","",10],[10,"as_pnt","","",10],[10,"abs","","",10],[10,"fmt","","",11],[10,"rand","","",11],[10,"hash","","",11],[10,"clone","","",11],[10,"decode","","",11],[10,"encode","","",11],[10,"eq","","",11],[10,"ne","","",11],[10,"new","","Creates a new vector.",11],[10,"inf","","",11],[10,"sup","","",11],[10,"partial_cmp","","",11],[10,"partial_lt","","",11],[10,"partial_le","","",11],[10,"partial_gt","","",11],[10,"partial_ge","","",11],[10,"x","","Create a unit vector with its `$compN` component equal to 1.0.",11],[10,"y","","Create a unit vector with its `$compN` component equal to 1.0.",11],[10,"from","","",11],[10,"as_array","","View this vector as an array.",11],[10,"as_array_mut","","View this vector as a mutable array.",11],[10,"from_array_ref","","View an array as a vector.",11],[10,"from_array_mut","","View an array as a vector.",11],[10,"index","","",11],[10,"index_mut","","",11],[10,"shape","","",11],[10,"at","","",11],[10,"set","","",11],[10,"swap","","",11],[10,"unsafe_at","","",11],[10,"unsafe_set","","",11],[10,"at_fast","","Unsafe read access to a vector element by index.",11],[10,"set_fast","","Unsafe write access to a vector element by index.",11],[10,"new_repeat","","Creates a new vector with all its components equal to a given value.",11],[10,"dim","","",11],[10,"len","","",11],[10,"add","","",11],[10,"sub","","",11],[10,"mul","","",11],[10,"div","","",11],[10,"add","","",11],[10,"sub","","",11],[10,"mul","","",11],[10,"div","","",11],[10,"neg","","",11],[10,"dot","","",11],[10,"mul_s","","",11],[10,"div_s","","",11],[10,"add_s","","",11],[10,"sub_s","","",11],[10,"translation","","",11],[10,"inv_translation","","",11],[10,"append_translation","","",11],[10,"append_translation_cpy","","",11],[10,"prepend_translation","","",11],[10,"prepend_translation_cpy","","",11],[10,"set_translation","","",11],[10,"sqnorm","","",11],[10,"normalize_cpy","","",11],[10,"normalize","","",11],[10,"approx_epsilon","","",11],[10,"approx_ulps","","",11],[10,"approx_eq","","",11],[10,"approx_eq_eps","","",11],[10,"approx_eq_ulps","","",11],[10,"one","","",11],[10,"zero","","",11],[10,"is_zero","","",11],[10,"from_iter","","",11],[10,"max_value","","",11],[10,"min_value","","",11],[10,"axpy","","",11],[10,"iter","","",11],[10,"iter_mut","","",11],[10,"to_homogeneous","","",11],[10,"from","","",11],[10,"translate","","",11],[10,"inv_translate","","",11],[10,"rotate","","",11],[10,"inv_rotate","","",11],[10,"rotate","","",17],[10,"inv_rotate","","",17],[10,"transform","","",11],[10,"inv_transform","","",11],[10,"to_pnt","","",11],[10,"as_pnt","","",11],[10,"to_pnt","","",11],[10,"as_pnt","","",11],[10,"abs","","",11],[10,"fmt","","",12],[10,"rand","","",12],[10,"hash","","",12],[10,"clone","","",12],[10,"decode","","",12],[10,"encode","","",12],[10,"eq","","",12],[10,"ne","","",12],[10,"new","","Creates a new vector.",12],[10,"inf","","",12],[10,"sup","","",12],[10,"partial_cmp","","",12],[10,"partial_lt","","",12],[10,"partial_le","","",12],[10,"partial_gt","","",12],[10,"partial_ge","","",12],[10,"x","","Create a unit vector with its `$compN` component equal to 1.0.",12],[10,"y","","Create a unit vector with its `$compN` component equal to 1.0.",12],[10,"z","","Create a unit vector with its `$compN` component equal to 1.0.",12],[10,"from","","",12],[10,"as_array","","View this vector as an array.",12],[10,"as_array_mut","","View this vector as a mutable array.",12],[10,"from_array_ref","","View an array as a vector.",12],[10,"from_array_mut","","View an array as a vector.",12],[10,"index","","",12],[10,"index_mut","","",12],[10,"shape","","",12],[10,"at","","",12],[10,"set","","",12],[10,"swap","","",12],[10,"unsafe_at","","",12],[10,"unsafe_set","","",12],[10,"at_fast","","Unsafe read access to a vector element by index.",12],[10,"set_fast","","Unsafe write access to a vector element by index.",12],[10,"new_repeat","","Creates a new vector with all its components equal to a given value.",12],[10,"dim","","",12],[10,"len","","",12],[10,"add","","",12],[10,"sub","","",12],[10,"mul","","",12],[10,"div","","",12],[10,"add","","",12],[10,"sub","","",12],[10,"mul","","",12],[10,"div","","",12],[10,"neg","","",12],[10,"dot","","",12],[10,"mul_s","","",12],[10,"div_s","","",12],[10,"add_s","","",12],[10,"sub_s","","",12],[10,"translation","","",12],[10,"inv_translation","","",12],[10,"append_translation","","",12],[10,"append_translation_cpy","","",12],[10,"prepend_translation","","",12],[10,"prepend_translation_cpy","","",12],[10,"set_translation","","",12],[10,"sqnorm","","",12],[10,"normalize_cpy","","",12],[10,"normalize","","",12],[10,"approx_epsilon","","",12],[10,"approx_ulps","","",12],[10,"approx_eq","","",12],[10,"approx_eq_eps","","",12],[10,"approx_eq_ulps","","",12],[10,"one","","",12],[10,"zero","","",12],[10,"is_zero","","",12],[10,"from_iter","","",12],[10,"max_value","","",12],[10,"min_value","","",12],[10,"axpy","","",12],[10,"iter","","",12],[10,"iter_mut","","",12],[10,"to_homogeneous","","",12],[10,"from","","",12],[10,"translate","","",12],[10,"inv_translate","","",12],[10,"rotate","","",12],[10,"inv_rotate","","",12],[10,"rotate","","",18],[10,"inv_rotate","","",18],[10,"transform","","",12],[10,"inv_transform","","",12],[10,"to_pnt","","",12],[10,"as_pnt","","",12],[10,"to_pnt","","",12],[10,"as_pnt","","",12],[10,"abs","","",12],[10,"fmt","","",13],[10,"rand","","",13],[10,"hash","","",13],[10,"clone","","",13],[10,"decode","","",13],[10,"encode","","",13],[10,"eq","","",13],[10,"ne","","",13],[10,"new","","Creates a new vector.",13],[10,"inf","","",13],[10,"sup","","",13],[10,"partial_cmp","","",13],[10,"partial_lt","","",13],[10,"partial_le","","",13],[10,"partial_gt","","",13],[10,"partial_ge","","",13],[10,"x","","Create a unit vector with its `$compN` component equal to 1.0.",13],[10,"y","","Create a unit vector with its `$compN` component equal to 1.0.",13],[10,"z","","Create a unit vector with its `$compN` component equal to 1.0.",13],[10,"w","","Create a unit vector with its `$compN` component equal to 1.0.",13],[10,"from","","",13],[10,"as_array","","View this vector as an array.",13],[10,"as_array_mut","","View this vector as a mutable array.",13],[10,"from_array_ref","","View an array as a vector.",13],[10,"from_array_mut","","View an array as a vector.",13],[10,"index","","",13],[10,"index_mut","","",13],[10,"shape","","",13],[10,"at","","",13],[10,"set","","",13],[10,"swap","","",13],[10,"unsafe_at","","",13],[10,"unsafe_set","","",13],[10,"at_fast","","Unsafe read access to a vector element by index.",13],[10,"set_fast","","Unsafe write access to a vector element by index.",13],[10,"new_repeat","","Creates a new vector with all its components equal to a given value.",13],[10,"dim","","",13],[10,"len","","",13],[10,"canonical_basis","","",13],[10,"orthonormal_subspace_basis","","",13],[10,"canonical_basis_element","","",13],[10,"add","","",13],[10,"sub","","",13],[10,"mul","","",13],[10,"div","","",13],[10,"add","","",13],[10,"sub","","",13],[10,"mul","","",13],[10,"div","","",13],[10,"neg","","",13],[10,"dot","","",13],[10,"mul_s","","",13],[10,"div_s","","",13],[10,"add_s","","",13],[10,"sub_s","","",13],[10,"translation","","",13],[10,"inv_translation","","",13],[10,"append_translation","","",13],[10,"append_translation_cpy","","",13],[10,"prepend_translation","","",13],[10,"prepend_translation_cpy","","",13],[10,"set_translation","","",13],[10,"sqnorm","","",13],[10,"normalize_cpy","","",13],[10,"normalize","","",13],[10,"approx_epsilon","","",13],[10,"approx_ulps","","",13],[10,"approx_eq","","",13],[10,"approx_eq_eps","","",13],[10,"approx_eq_ulps","","",13],[10,"one","","",13],[10,"zero","","",13],[10,"is_zero","","",13],[10,"from_iter","","",13],[10,"max_value","","",13],[10,"min_value","","",13],[10,"axpy","","",13],[10,"iter","","",13],[10,"iter_mut","","",13],[10,"to_homogeneous","","",13],[10,"from","","",13],[10,"translate","","",13],[10,"inv_translate","","",13],[10,"rotate","","",13],[10,"inv_rotate","","",13],[10,"rotate","","",19],[10,"inv_rotate","","",19],[10,"transform","","",13],[10,"inv_transform","","",13],[10,"to_pnt","","",13],[10,"as_pnt","","",13],[10,"to_pnt","","",13],[10,"as_pnt","","",13],[10,"abs","","",13],[10,"fmt","","",14],[10,"rand","","",14],[10,"hash","","",14],[10,"clone","","",14],[10,"decode","","",14],[10,"encode","","",14],[10,"eq","","",14],[10,"ne","","",14],[10,"new","","Creates a new vector.",14],[10,"inf","","",14],[10,"sup","","",14],[10,"partial_cmp","","",14],[10,"partial_lt","","",14],[10,"partial_le","","",14],[10,"partial_gt","","",14],[10,"partial_ge","","",14],[10,"x","","Create a unit vector with its `$compN` component equal to 1.0.",14],[10,"y","","Create a unit vector with its `$compN` component equal to 1.0.",14],[10,"z","","Create a unit vector with its `$compN` component equal to 1.0.",14],[10,"w","","Create a unit vector with its `$compN` component equal to 1.0.",14],[10,"a","","Create a unit vector with its `$compN` component equal to 1.0.",14],[10,"from","","",14],[10,"as_array","","View this vector as an array.",14],[10,"as_array_mut","","View this vector as a mutable array.",14],[10,"from_array_ref","","View an array as a vector.",14],[10,"from_array_mut","","View an array as a vector.",14],[10,"index","","",14],[10,"index_mut","","",14],[10,"shape","","",14],[10,"at","","",14],[10,"set","","",14],[10,"swap","","",14],[10,"unsafe_at","","",14],[10,"unsafe_set","","",14],[10,"at_fast","","Unsafe read access to a vector element by index.",14],[10,"set_fast","","Unsafe write access to a vector element by index.",14],[10,"new_repeat","","Creates a new vector with all its components equal to a given value.",14],[10,"dim","","",14],[10,"len","","",14],[10,"canonical_basis","","",14],[10,"orthonormal_subspace_basis","","",14],[10,"canonical_basis_element","","",14],[10,"add","","",14],[10,"sub","","",14],[10,"mul","","",14],[10,"div","","",14],[10,"add","","",14],[10,"sub","","",14],[10,"mul","","",14],[10,"div","","",14],[10,"neg","","",14],[10,"dot","","",14],[10,"mul_s","","",14],[10,"div_s","","",14],[10,"add_s","","",14],[10,"sub_s","","",14],[10,"translation","","",14],[10,"inv_translation","","",14],[10,"append_translation","","",14],[10,"append_translation_cpy","","",14],[10,"prepend_translation","","",14],[10,"prepend_translation_cpy","","",14],[10,"set_translation","","",14],[10,"sqnorm","","",14],[10,"normalize_cpy","","",14],[10,"normalize","","",14],[10,"approx_epsilon","","",14],[10,"approx_ulps","","",14],[10,"approx_eq","","",14],[10,"approx_eq_eps","","",14],[10,"approx_eq_ulps","","",14],[10,"one","","",14],[10,"zero","","",14],[10,"is_zero","","",14],[10,"from_iter","","",14],[10,"max_value","","",14],[10,"min_value","","",14],[10,"axpy","","",14],[10,"iter","","",14],[10,"iter_mut","","",14],[10,"to_homogeneous","","",14],[10,"from","","",14],[10,"translate","","",14],[10,"inv_translate","","",14],[10,"rotate","","",14],[10,"inv_rotate","","",14],[10,"rotate","","",20],[10,"inv_rotate","","",20],[10,"transform","","",14],[10,"inv_transform","","",14],[10,"to_pnt","","",14],[10,"as_pnt","","",14],[10,"to_pnt","","",14],[10,"as_pnt","","",14],[10,"abs","","",14],[10,"fmt","","",15],[10,"rand","","",15],[10,"hash","","",15],[10,"clone","","",15],[10,"decode","","",15],[10,"encode","","",15],[10,"eq","","",15],[10,"ne","","",15],[10,"new","","Creates a new vector.",15],[10,"inf","","",15],[10,"sup","","",15],[10,"partial_cmp","","",15],[10,"partial_lt","","",15],[10,"partial_le","","",15],[10,"partial_gt","","",15],[10,"partial_ge","","",15],[10,"x","","Create a unit vector with its `$compN` component equal to 1.0.",15],[10,"y","","Create a unit vector with its `$compN` component equal to 1.0.",15],[10,"z","","Create a unit vector with its `$compN` component equal to 1.0.",15],[10,"w","","Create a unit vector with its `$compN` component equal to 1.0.",15],[10,"a","","Create a unit vector with its `$compN` component equal to 1.0.",15],[10,"b","","Create a unit vector with its `$compN` component equal to 1.0.",15],[10,"from","","",15],[10,"as_array","","View this vector as an array.",15],[10,"as_array_mut","","View this vector as a mutable array.",15],[10,"from_array_ref","","View an array as a vector.",15],[10,"from_array_mut","","View an array as a vector.",15],[10,"index","","",15],[10,"index_mut","","",15],[10,"shape","","",15],[10,"at","","",15],[10,"set","","",15],[10,"swap","","",15],[10,"unsafe_at","","",15],[10,"unsafe_set","","",15],[10,"at_fast","","Unsafe read access to a vector element by index.",15],[10,"set_fast","","Unsafe write access to a vector element by index.",15],[10,"new_repeat","","Creates a new vector with all its components equal to a given value.",15],[10,"dim","","",15],[10,"len","","",15],[10,"canonical_basis","","",15],[10,"orthonormal_subspace_basis","","",15],[10,"canonical_basis_element","","",15],[10,"add","","",15],[10,"sub","","",15],[10,"mul","","",15],[10,"div","","",15],[10,"add","","",15],[10,"sub","","",15],[10,"mul","","",15],[10,"div","","",15],[10,"neg","","",15],[10,"dot","","",15],[10,"mul_s","","",15],[10,"div_s","","",15],[10,"add_s","","",15],[10,"sub_s","","",15],[10,"translation","","",15],[10,"inv_translation","","",15],[10,"append_translation","","",15],[10,"append_translation_cpy","","",15],[10,"prepend_translation","","",15],[10,"prepend_translation_cpy","","",15],[10,"set_translation","","",15],[10,"sqnorm","","",15],[10,"normalize_cpy","","",15],[10,"normalize","","",15],[10,"approx_epsilon","","",15],[10,"approx_ulps","","",15],[10,"approx_eq","","",15],[10,"approx_eq_eps","","",15],[10,"approx_eq_ulps","","",15],[10,"one","","",15],[10,"zero","","",15],[10,"is_zero","","",15],[10,"from_iter","","",15],[10,"max_value","","",15],[10,"min_value","","",15],[10,"axpy","","",15],[10,"iter","","",15],[10,"iter_mut","","",15],[10,"translate","","",15],[10,"inv_translate","","",15],[10,"rotate","","",15],[10,"inv_rotate","","",15],[10,"rotate","","",21],[10,"inv_rotate","","",21],[10,"transform","","",15],[10,"inv_transform","","",15],[10,"to_pnt","","",15],[10,"as_pnt","","",15],[10,"to_pnt","","",15],[10,"as_pnt","","",15],[10,"abs","","",15],[10,"fmt","","",32],[10,"rand","","",32],[10,"clone","","",32],[10,"decode","","",32],[10,"eq","","",32],[10,"ne","","",32],[10,"new","","Creates a new point.",32],[10,"new_repeat","","Creates a new point. The parameter is not taken in account.",32],[10,"fmt","","",16],[10,"rand","","",16],[10,"hash","","",16],[10,"clone","","",16],[10,"decode","","",16],[10,"encode","","",16],[10,"eq","","",16],[10,"ne","","",16],[10,"new","","Creates a new vector.",16],[10,"orig","","",16],[10,"is_orig","","",16],[10,"inf","","",16],[10,"sup","","",16],[10,"partial_cmp","","",16],[10,"partial_lt","","",16],[10,"partial_le","","",16],[10,"partial_gt","","",16],[10,"partial_ge","","",16],[10,"mul","","",16],[10,"div","","",16],[10,"add","","",16],[10,"sub","","",16],[10,"from","","",16],[10,"as_array","","View this vector as an array.",16],[10,"as_array_mut","","View this vector as a mutable array.",16],[10,"from_array_ref","","View an array as a vector.",16],[10,"from_array_mut","","View an array as a vector.",16],[10,"index","","",16],[10,"index_mut","","",16],[10,"shape","","",16],[10,"at","","",16],[10,"set","","",16],[10,"swap","","",16],[10,"unsafe_at","","",16],[10,"unsafe_set","","",16],[10,"at_fast","","Unsafe read access to a vector element by index.",16],[10,"set_fast","","Unsafe write access to a vector element by index.",16],[10,"new_repeat","","Creates a new vector with all its components equal to a given value.",16],[10,"dim","","",16],[10,"len","","",16],[10,"to_vec","","Converts this point to its associated vector.",16],[10,"as_vec","","Converts a reference to this point to a reference to its associated vector.",16],[10,"to_vec","","",16],[10,"as_vec","","",16],[10,"set_coords","","",16],[10,"sub","","",16],[10,"neg","","",16],[10,"add","","",16],[10,"sub","","",16],[10,"mul_s","","",16],[10,"div_s","","",16],[10,"add_s","","",16],[10,"sub_s","","",16],[10,"approx_epsilon","","",16],[10,"approx_ulps","","",16],[10,"approx_eq","","",16],[10,"approx_eq_eps","","",16],[10,"approx_eq_ulps","","",16],[10,"from_iter","","",16],[10,"max_value","","",16],[10,"min_value","","",16],[10,"axpy","","",16],[10,"iter","","",16],[10,"iter_mut","","",16],[10,"to_homogeneous","","",16],[10,"from","","",16],[10,"fmt","","",17],[10,"rand","","",17],[10,"hash","","",17],[10,"clone","","",17],[10,"decode","","",17],[10,"encode","","",17],[10,"eq","","",17],[10,"ne","","",17],[10,"new","","Creates a new vector.",17],[10,"orig","","",17],[10,"is_orig","","",17],[10,"inf","","",17],[10,"sup","","",17],[10,"partial_cmp","","",17],[10,"partial_lt","","",17],[10,"partial_le","","",17],[10,"partial_gt","","",17],[10,"partial_ge","","",17],[10,"mul","","",17],[10,"div","","",17],[10,"add","","",17],[10,"sub","","",17],[10,"from","","",17],[10,"as_array","","View this vector as an array.",17],[10,"as_array_mut","","View this vector as a mutable array.",17],[10,"from_array_ref","","View an array as a vector.",17],[10,"from_array_mut","","View an array as a vector.",17],[10,"index","","",17],[10,"index_mut","","",17],[10,"shape","","",17],[10,"at","","",17],[10,"set","","",17],[10,"swap","","",17],[10,"unsafe_at","","",17],[10,"unsafe_set","","",17],[10,"at_fast","","Unsafe read access to a vector element by index.",17],[10,"set_fast","","Unsafe write access to a vector element by index.",17],[10,"new_repeat","","Creates a new vector with all its components equal to a given value.",17],[10,"dim","","",17],[10,"len","","",17],[10,"to_vec","","Converts this point to its associated vector.",17],[10,"as_vec","","Converts a reference to this point to a reference to its associated vector.",17],[10,"to_vec","","",17],[10,"as_vec","","",17],[10,"set_coords","","",17],[10,"sub","","",17],[10,"neg","","",17],[10,"add","","",17],[10,"sub","","",17],[10,"mul_s","","",17],[10,"div_s","","",17],[10,"add_s","","",17],[10,"sub_s","","",17],[10,"approx_epsilon","","",17],[10,"approx_ulps","","",17],[10,"approx_eq","","",17],[10,"approx_eq_eps","","",17],[10,"approx_eq_ulps","","",17],[10,"from_iter","","",17],[10,"max_value","","",17],[10,"min_value","","",17],[10,"axpy","","",17],[10,"iter","","",17],[10,"iter_mut","","",17],[10,"to_homogeneous","","",17],[10,"from","","",17],[10,"fmt","","",18],[10,"rand","","",18],[10,"hash","","",18],[10,"clone","","",18],[10,"decode","","",18],[10,"encode","","",18],[10,"eq","","",18],[10,"ne","","",18],[10,"new","","Creates a new vector.",18],[10,"orig","","",18],[10,"is_orig","","",18],[10,"inf","","",18],[10,"sup","","",18],[10,"partial_cmp","","",18],[10,"partial_lt","","",18],[10,"partial_le","","",18],[10,"partial_gt","","",18],[10,"partial_ge","","",18],[10,"mul","","",18],[10,"div","","",18],[10,"add","","",18],[10,"sub","","",18],[10,"from","","",18],[10,"as_array","","View this vector as an array.",18],[10,"as_array_mut","","View this vector as a mutable array.",18],[10,"from_array_ref","","View an array as a vector.",18],[10,"from_array_mut","","View an array as a vector.",18],[10,"index","","",18],[10,"index_mut","","",18],[10,"shape","","",18],[10,"at","","",18],[10,"set","","",18],[10,"swap","","",18],[10,"unsafe_at","","",18],[10,"unsafe_set","","",18],[10,"at_fast","","Unsafe read access to a vector element by index.",18],[10,"set_fast","","Unsafe write access to a vector element by index.",18],[10,"new_repeat","","Creates a new vector with all its components equal to a given value.",18],[10,"dim","","",18],[10,"len","","",18],[10,"to_vec","","Converts this point to its associated vector.",18],[10,"as_vec","","Converts a reference to this point to a reference to its associated vector.",18],[10,"to_vec","","",18],[10,"as_vec","","",18],[10,"set_coords","","",18],[10,"sub","","",18],[10,"neg","","",18],[10,"add","","",18],[10,"sub","","",18],[10,"mul_s","","",18],[10,"div_s","","",18],[10,"add_s","","",18],[10,"sub_s","","",18],[10,"approx_epsilon","","",18],[10,"approx_ulps","","",18],[10,"approx_eq","","",18],[10,"approx_eq_eps","","",18],[10,"approx_eq_ulps","","",18],[10,"from_iter","","",18],[10,"max_value","","",18],[10,"min_value","","",18],[10,"axpy","","",18],[10,"iter","","",18],[10,"iter_mut","","",18],[10,"to_homogeneous","","",18],[10,"from","","",18],[10,"fmt","","",19],[10,"rand","","",19],[10,"hash","","",19],[10,"clone","","",19],[10,"decode","","",19],[10,"encode","","",19],[10,"eq","","",19],[10,"ne","","",19],[10,"new","","Creates a new vector.",19],[10,"orig","","",19],[10,"is_orig","","",19],[10,"inf","","",19],[10,"sup","","",19],[10,"partial_cmp","","",19],[10,"partial_lt","","",19],[10,"partial_le","","",19],[10,"partial_gt","","",19],[10,"partial_ge","","",19],[10,"mul","","",19],[10,"div","","",19],[10,"add","","",19],[10,"sub","","",19],[10,"from","","",19],[10,"as_array","","View this vector as an array.",19],[10,"as_array_mut","","View this vector as a mutable array.",19],[10,"from_array_ref","","View an array as a vector.",19],[10,"from_array_mut","","View an array as a vector.",19],[10,"index","","",19],[10,"index_mut","","",19],[10,"shape","","",19],[10,"at","","",19],[10,"set","","",19],[10,"swap","","",19],[10,"unsafe_at","","",19],[10,"unsafe_set","","",19],[10,"at_fast","","Unsafe read access to a vector element by index.",19],[10,"set_fast","","Unsafe write access to a vector element by index.",19],[10,"new_repeat","","Creates a new vector with all its components equal to a given value.",19],[10,"dim","","",19],[10,"len","","",19],[10,"to_vec","","Converts this point to its associated vector.",19],[10,"as_vec","","Converts a reference to this point to a reference to its associated vector.",19],[10,"to_vec","","",19],[10,"as_vec","","",19],[10,"set_coords","","",19],[10,"sub","","",19],[10,"neg","","",19],[10,"add","","",19],[10,"sub","","",19],[10,"mul_s","","",19],[10,"div_s","","",19],[10,"add_s","","",19],[10,"sub_s","","",19],[10,"approx_epsilon","","",19],[10,"approx_ulps","","",19],[10,"approx_eq","","",19],[10,"approx_eq_eps","","",19],[10,"approx_eq_ulps","","",19],[10,"from_iter","","",19],[10,"max_value","","",19],[10,"min_value","","",19],[10,"axpy","","",19],[10,"iter","","",19],[10,"iter_mut","","",19],[10,"to_homogeneous","","",19],[10,"from","","",19],[10,"fmt","","",20],[10,"rand","","",20],[10,"hash","","",20],[10,"clone","","",20],[10,"decode","","",20],[10,"encode","","",20],[10,"eq","","",20],[10,"ne","","",20],[10,"new","","Creates a new vector.",20],[10,"orig","","",20],[10,"is_orig","","",20],[10,"inf","","",20],[10,"sup","","",20],[10,"partial_cmp","","",20],[10,"partial_lt","","",20],[10,"partial_le","","",20],[10,"partial_gt","","",20],[10,"partial_ge","","",20],[10,"mul","","",20],[10,"div","","",20],[10,"add","","",20],[10,"sub","","",20],[10,"from","","",20],[10,"as_array","","View this vector as an array.",20],[10,"as_array_mut","","View this vector as a mutable array.",20],[10,"from_array_ref","","View an array as a vector.",20],[10,"from_array_mut","","View an array as a vector.",20],[10,"index","","",20],[10,"index_mut","","",20],[10,"shape","","",20],[10,"at","","",20],[10,"set","","",20],[10,"swap","","",20],[10,"unsafe_at","","",20],[10,"unsafe_set","","",20],[10,"at_fast","","Unsafe read access to a vector element by index.",20],[10,"set_fast","","Unsafe write access to a vector element by index.",20],[10,"new_repeat","","Creates a new vector with all its components equal to a given value.",20],[10,"dim","","",20],[10,"len","","",20],[10,"to_vec","","Converts this point to its associated vector.",20],[10,"as_vec","","Converts a reference to this point to a reference to its associated vector.",20],[10,"to_vec","","",20],[10,"as_vec","","",20],[10,"set_coords","","",20],[10,"sub","","",20],[10,"neg","","",20],[10,"add","","",20],[10,"sub","","",20],[10,"mul_s","","",20],[10,"div_s","","",20],[10,"add_s","","",20],[10,"sub_s","","",20],[10,"approx_epsilon","","",20],[10,"approx_ulps","","",20],[10,"approx_eq","","",20],[10,"approx_eq_eps","","",20],[10,"approx_eq_ulps","","",20],[10,"from_iter","","",20],[10,"max_value","","",20],[10,"min_value","","",20],[10,"axpy","","",20],[10,"iter","","",20],[10,"iter_mut","","",20],[10,"to_homogeneous","","",20],[10,"from","","",20],[10,"fmt","","",21],[10,"rand","","",21],[10,"hash","","",21],[10,"clone","","",21],[10,"decode","","",21],[10,"encode","","",21],[10,"eq","","",21],[10,"ne","","",21],[10,"new","","Creates a new vector.",21],[10,"orig","","",21],[10,"is_orig","","",21],[10,"inf","","",21],[10,"sup","","",21],[10,"partial_cmp","","",21],[10,"partial_lt","","",21],[10,"partial_le","","",21],[10,"partial_gt","","",21],[10,"partial_ge","","",21],[10,"mul","","",21],[10,"div","","",21],[10,"add","","",21],[10,"sub","","",21],[10,"from","","",21],[10,"as_array","","View this vector as an array.",21],[10,"as_array_mut","","View this vector as a mutable array.",21],[10,"from_array_ref","","View an array as a vector.",21],[10,"from_array_mut","","View an array as a vector.",21],[10,"index","","",21],[10,"index_mut","","",21],[10,"shape","","",21],[10,"at","","",21],[10,"set","","",21],[10,"swap","","",21],[10,"unsafe_at","","",21],[10,"unsafe_set","","",21],[10,"at_fast","","Unsafe read access to a vector element by index.",21],[10,"set_fast","","Unsafe write access to a vector element by index.",21],[10,"new_repeat","","Creates a new vector with all its components equal to a given value.",21],[10,"dim","","",21],[10,"len","","",21],[10,"to_vec","","Converts this point to its associated vector.",21],[10,"as_vec","","Converts a reference to this point to a reference to its associated vector.",21],[10,"to_vec","","",21],[10,"as_vec","","",21],[10,"set_coords","","",21],[10,"sub","","",21],[10,"neg","","",21],[10,"add","","",21],[10,"sub","","",21],[10,"mul_s","","",21],[10,"div_s","","",21],[10,"add_s","","",21],[10,"sub_s","","",21],[10,"approx_epsilon","","",21],[10,"approx_ulps","","",21],[10,"approx_eq","","",21],[10,"approx_eq_eps","","",21],[10,"approx_eq_ulps","","",21],[10,"from_iter","","",21],[10,"max_value","","",21],[10,"min_value","","",21],[10,"axpy","","",21],[10,"iter","","",21],[10,"iter_mut","","",21],[10,"fmt","","",22],[10,"rand","","",22],[10,"hash","","",22],[10,"clone","","",22],[10,"decode","","",22],[10,"encode","","",22],[10,"eq","","",22],[10,"ne","","",22],[10,"new","","Creates a new quaternion from its components.",22],[10,"vector","","The vector part `(i, j, k)` of this quaternion.",22],[10,"scalar","","The scalar part `w` of this quaternion.",22],[10,"conjugate","","Replaces this quaternion by its conjugate.",22],[10,"inv_cpy","","",22],[10,"inv","","",22],[10,"sqnorm","","",22],[10,"normalize_cpy","","",22],[10,"normalize","","",22],[10,"mul","","",22],[10,"div","","",22],[10,"fmt","","",33],[10,"hash","","",33],[10,"clone","","",33],[10,"decode","","",33],[10,"encode","","",33],[10,"eq","","",33],[10,"ne","","",33],[10,"new","","Creates a new unit quaternion from the axis-angle representation of a rotation.",33],[10,"new_with_quat","","Creates a new unit quaternion from a quaternion.",33],[10,"new_with_euler_angles","","Creates a new unit quaternion from Euler angles.",33],[10,"to_rot","","Builds a rotation matrix from this quaternion.",33],[10,"new_with_unit_quat","","Creates a new unit quaternion from a quaternion.",33],[10,"quat","","The `Quat` representation of this unit quaternion.",33],[10,"one","","",33],[10,"inv_cpy","","",33],[10,"inv","","",33],[10,"rand","","",33],[10,"approx_epsilon","","",33],[10,"approx_ulps","","",33],[10,"approx_eq_eps","","",33],[10,"approx_eq_ulps","","",33],[10,"div","","",33],[10,"mul","","",33],[10,"mul","","",33],[10,"mul","","",33],[10,"mul","","",12],[10,"mul","","",18],[10,"rotation","","",33],[10,"inv_rotation","","",33],[10,"append_rotation","","",33],[10,"append_rotation_cpy","","",33],[10,"prepend_rotation","","",33],[10,"prepend_rotation_cpy","","",33],[10,"set_rotation","","",33],[10,"rotate","","",33],[10,"inv_rotate","","",33],[10,"rotate","","",33],[10,"inv_rotate","","",33],[10,"transform","","",33],[10,"inv_transform","","",33],[10,"transform","","",33],[10,"inv_transform","","",33],[10,"inf","","",22],[10,"sup","","",22],[10,"partial_cmp","","",22],[10,"partial_lt","","",22],[10,"partial_le","","",22],[10,"partial_gt","","",22],[10,"partial_ge","","",22],[10,"w","","Create a unit vector with its `$compN` component equal to 1.0.",22],[10,"i","","Create a unit vector with its `$compN` component equal to 1.0.",22],[10,"j","","Create a unit vector with its `$compN` component equal to 1.0.",22],[10,"k","","Create a unit vector with its `$compN` component equal to 1.0.",22],[10,"from","","",22],[10,"as_array","","View this vector as an array.",22],[10,"as_array_mut","","View this vector as a mutable array.",22],[10,"from_array_ref","","View an array as a vector.",22],[10,"from_array_mut","","View an array as a vector.",22],[10,"index","","",22],[10,"index_mut","","",22],[10,"shape","","",22],[10,"at","","",22],[10,"set","","",22],[10,"swap","","",22],[10,"unsafe_at","","",22],[10,"unsafe_set","","",22],[10,"at_fast","","Unsafe read access to a vector element by index.",22],[10,"set_fast","","Unsafe write access to a vector element by index.",22],[10,"new_repeat","","Creates a new vector with all its components equal to a given value.",22],[10,"dim","","",22],[10,"len","","",22],[10,"add","","",22],[10,"sub","","",22],[10,"add","","",22],[10,"sub","","",22],[10,"mul","","",22],[10,"div","","",22],[10,"neg","","",22],[10,"mul_s","","",22],[10,"div_s","","",22],[10,"add_s","","",22],[10,"sub_s","","",22],[10,"one","","",22],[10,"zero","","",22],[10,"is_zero","","",22],[10,"approx_epsilon","","",22],[10,"approx_ulps","","",22],[10,"approx_eq","","",22],[10,"approx_eq_eps","","",22],[10,"approx_eq_ulps","","",22],[10,"from_iter","","",22],[10,"max_value","","",22],[10,"min_value","","",22],[10,"axpy","","",22],[10,"iter","","",22],[10,"iter_mut","","",22],[10,"dim","","",33],[10,"fmt","","",34],[10,"rand","","",34],[10,"clone","","",34],[10,"decode","","",34],[10,"eq","","",34],[10,"ne","","",34],[10,"new","","Creates a new identity matrix.",34],[10,"fmt","","",4],[10,"rand","","",4],[10,"hash","","",4],[10,"clone","","",4],[10,"decode","","",4],[10,"encode","","",4],[10,"eq","","",4],[10,"ne","","",4],[10,"new_identity","","",4],[10,"new","","",4],[10,"as_array","","View this matrix as a column-major array of arrays.",4],[10,"as_array_mut","","View this matrix as a column-major mutable array of arrays.",4],[10,"from_array_ref","","View a column-major array of array as a vector.",4],[10,"from_array_mut","","View a column-major array of array as a mutable vector.",4],[10,"from","","",4],[10,"add","","",4],[10,"sub","","",4],[10,"add","","",4],[10,"sub","","",4],[10,"mul","","",4],[10,"div","","",4],[10,"abs","","",4],[10,"zero","","",4],[10,"is_zero","","",4],[10,"one","","",4],[10,"iter","","",4],[10,"iter_mut","","",4],[10,"at_fast","","",4],[10,"set_fast","","",4],[10,"dim","","",4],[10,"shape","","",4],[10,"at","","",4],[10,"set","","",4],[10,"swap","","",4],[10,"unsafe_at","","",4],[10,"unsafe_set","","",4],[10,"index","","",4],[10,"index_mut","","",4],[10,"mul","","",4],[10,"mul","","",4],[10,"mul","","",10],[10,"mul","","",4],[10,"mul","","",16],[10,"transpose_cpy","","",4],[10,"transpose","","",4],[10,"approx_epsilon","","",4],[10,"approx_ulps","","",4],[10,"approx_eq_eps","","",4],[10,"approx_eq_ulps","","",4],[10,"nrows","","",4],[10,"set_row","","",4],[10,"row","","",4],[10,"ncols","","",4],[10,"set_col","","",4],[10,"col","","",4],[10,"col_slice","","",4],[10,"row_slice","","",4],[10,"from_diag","","",4],[10,"set_diag","","",4],[10,"diag","","",4],[10,"to_homogeneous","","",4],[10,"from","","",4],[10,"outer","","",10],[10,"eigen_qr","","",4],[10,"fmt","","",5],[10,"rand","","",5],[10,"hash","","",5],[10,"clone","","",5],[10,"decode","","",5],[10,"encode","","",5],[10,"eq","","",5],[10,"ne","","",5],[10,"new_identity","","",5],[10,"new","","",5],[10,"as_array","","View this matrix as a column-major array of arrays.",5],[10,"as_array_mut","","View this matrix as a column-major mutable array of arrays.",5],[10,"from_array_ref","","View a column-major array of array as a vector.",5],[10,"from_array_mut","","View a column-major array of array as a mutable vector.",5],[10,"from","","",5],[10,"add","","",5],[10,"sub","","",5],[10,"add","","",5],[10,"sub","","",5],[10,"mul","","",5],[10,"div","","",5],[10,"abs","","",5],[10,"zero","","",5],[10,"is_zero","","",5],[10,"one","","",5],[10,"iter","","",5],[10,"iter_mut","","",5],[10,"dim","","",5],[10,"shape","","",5],[10,"at","","",5],[10,"set","","",5],[10,"swap","","",5],[10,"unsafe_at","","",5],[10,"unsafe_set","","",5],[10,"index","","",5],[10,"index_mut","","",5],[10,"at_fast","","",5],[10,"set_fast","","",5],[10,"transpose_cpy","","",5],[10,"transpose","","",5],[10,"approx_epsilon","","",5],[10,"approx_ulps","","",5],[10,"approx_eq_eps","","",5],[10,"approx_eq_ulps","","",5],[10,"nrows","","",5],[10,"set_row","","",5],[10,"row","","",5],[10,"ncols","","",5],[10,"set_col","","",5],[10,"col","","",5],[10,"col_slice","","",5],[10,"row_slice","","",5],[10,"from_diag","","",5],[10,"set_diag","","",5],[10,"diag","","",5],[10,"to_homogeneous","","",5],[10,"from","","",5],[10,"outer","","",11],[10,"eigen_qr","","",5],[10,"fmt","","",6],[10,"rand","","",6],[10,"hash","","",6],[10,"clone","","",6],[10,"decode","","",6],[10,"encode","","",6],[10,"eq","","",6],[10,"ne","","",6],[10,"new_identity","","",6],[10,"new","","",6],[10,"as_array","","View this matrix as a column-major array of arrays.",6],[10,"as_array_mut","","View this matrix as a column-major mutable array of arrays.",6],[10,"from_array_ref","","View a column-major array of array as a vector.",6],[10,"from_array_mut","","View a column-major array of array as a mutable vector.",6],[10,"from","","",6],[10,"add","","",6],[10,"sub","","",6],[10,"add","","",6],[10,"sub","","",6],[10,"mul","","",6],[10,"div","","",6],[10,"abs","","",6],[10,"zero","","",6],[10,"is_zero","","",6],[10,"one","","",6],[10,"iter","","",6],[10,"iter_mut","","",6],[10,"dim","","",6],[10,"shape","","",6],[10,"at","","",6],[10,"set","","",6],[10,"swap","","",6],[10,"unsafe_at","","",6],[10,"unsafe_set","","",6],[10,"index","","",6],[10,"index_mut","","",6],[10,"at_fast","","",6],[10,"set_fast","","",6],[10,"transpose_cpy","","",6],[10,"transpose","","",6],[10,"approx_epsilon","","",6],[10,"approx_ulps","","",6],[10,"approx_eq_eps","","",6],[10,"approx_eq_ulps","","",6],[10,"col_slice","","",6],[10,"row_slice","","",6],[10,"from_diag","","",6],[10,"set_diag","","",6],[10,"diag","","",6],[10,"to_homogeneous","","",6],[10,"from","","",6],[10,"outer","","",12],[10,"eigen_qr","","",6],[10,"fmt","","",7],[10,"rand","","",7],[10,"hash","","",7],[10,"clone","","",7],[10,"decode","","",7],[10,"encode","","",7],[10,"eq","","",7],[10,"ne","","",7],[10,"new_identity","","",7],[10,"new","","",7],[10,"as_array","","View this matrix as a column-major array of arrays.",7],[10,"as_array_mut","","View this matrix as a column-major mutable array of arrays.",7],[10,"from_array_ref","","View a column-major array of array as a vector.",7],[10,"from_array_mut","","View a column-major array of array as a mutable vector.",7],[10,"from","","",7],[10,"add","","",7],[10,"sub","","",7],[10,"add","","",7],[10,"sub","","",7],[10,"mul","","",7],[10,"div","","",7],[10,"abs","","",7],[10,"zero","","",7],[10,"is_zero","","",7],[10,"one","","",7],[10,"iter","","",7],[10,"iter_mut","","",7],[10,"dim","","",7],[10,"shape","","",7],[10,"at","","",7],[10,"set","","",7],[10,"swap","","",7],[10,"unsafe_at","","",7],[10,"unsafe_set","","",7],[10,"index","","",7],[10,"index_mut","","",7],[10,"at_fast","","",7],[10,"set_fast","","",7],[10,"mul","","",7],[10,"mul","","",7],[10,"mul","","",13],[10,"mul","","",7],[10,"mul","","",19],[10,"inv_cpy","","",7],[10,"inv","","",7],[10,"transpose_cpy","","",7],[10,"transpose","","",7],[10,"approx_epsilon","","",7],[10,"approx_ulps","","",7],[10,"approx_eq_eps","","",7],[10,"approx_eq_ulps","","",7],[10,"nrows","","",7],[10,"set_row","","",7],[10,"row","","",7],[10,"ncols","","",7],[10,"set_col","","",7],[10,"col","","",7],[10,"col_slice","","",7],[10,"row_slice","","",7],[10,"from_diag","","",7],[10,"set_diag","","",7],[10,"diag","","",7],[10,"to_homogeneous","","",7],[10,"from","","",7],[10,"outer","","",13],[10,"eigen_qr","","",7],[10,"fmt","","",8],[10,"rand","","",8],[10,"hash","","",8],[10,"clone","","",8],[10,"decode","","",8],[10,"encode","","",8],[10,"eq","","",8],[10,"ne","","",8],[10,"new_identity","","",8],[10,"new","","",8],[10,"as_array","","View this matrix as a column-major array of arrays.",8],[10,"as_array_mut","","View this matrix as a column-major mutable array of arrays.",8],[10,"from_array_ref","","View a column-major array of array as a vector.",8],[10,"from_array_mut","","View a column-major array of array as a mutable vector.",8],[10,"from","","",8],[10,"abs","","",8],[10,"zero","","",8],[10,"is_zero","","",8],[10,"one","","",8],[10,"add","","",8],[10,"sub","","",8],[10,"add","","",8],[10,"sub","","",8],[10,"mul","","",8],[10,"div","","",8],[10,"iter","","",8],[10,"iter_mut","","",8],[10,"dim","","",8],[10,"shape","","",8],[10,"at","","",8],[10,"set","","",8],[10,"swap","","",8],[10,"unsafe_at","","",8],[10,"unsafe_set","","",8],[10,"index","","",8],[10,"index_mut","","",8],[10,"at_fast","","",8],[10,"set_fast","","",8],[10,"mul","","",8],[10,"mul","","",8],[10,"mul","","",14],[10,"mul","","",8],[10,"mul","","",20],[10,"inv_cpy","","",8],[10,"inv","","",8],[10,"transpose_cpy","","",8],[10,"transpose","","",8],[10,"approx_epsilon","","",8],[10,"approx_ulps","","",8],[10,"approx_eq_eps","","",8],[10,"approx_eq_ulps","","",8],[10,"nrows","","",8],[10,"set_row","","",8],[10,"row","","",8],[10,"ncols","","",8],[10,"set_col","","",8],[10,"col","","",8],[10,"col_slice","","",8],[10,"row_slice","","",8],[10,"from_diag","","",8],[10,"set_diag","","",8],[10,"diag","","",8],[10,"to_homogeneous","","",8],[10,"from","","",8],[10,"outer","","",14],[10,"eigen_qr","","",8],[10,"fmt","","",9],[10,"rand","","",9],[10,"hash","","",9],[10,"clone","","",9],[10,"decode","","",9],[10,"encode","","",9],[10,"eq","","",9],[10,"ne","","",9],[10,"new_identity","","",9],[10,"new","","",9],[10,"as_array","","View this matrix as a column-major array of arrays.",9],[10,"as_array_mut","","View this matrix as a column-major mutable array of arrays.",9],[10,"from_array_ref","","View a column-major array of array as a vector.",9],[10,"from_array_mut","","View a column-major array of array as a mutable vector.",9],[10,"from","","",9],[10,"add","","",9],[10,"sub","","",9],[10,"add","","",9],[10,"sub","","",9],[10,"mul","","",9],[10,"div","","",9],[10,"abs","","",9],[10,"zero","","",9],[10,"is_zero","","",9],[10,"one","","",9],[10,"iter","","",9],[10,"iter_mut","","",9],[10,"dim","","",9],[10,"shape","","",9],[10,"at","","",9],[10,"set","","",9],[10,"swap","","",9],[10,"unsafe_at","","",9],[10,"unsafe_set","","",9],[10,"index","","",9],[10,"index_mut","","",9],[10,"at_fast","","",9],[10,"set_fast","","",9],[10,"mul","","",9],[10,"mul","","",9],[10,"mul","","",15],[10,"mul","","",9],[10,"mul","","",21],[10,"inv_cpy","","",9],[10,"inv","","",9],[10,"transpose_cpy","","",9],[10,"transpose","","",9],[10,"approx_epsilon","","",9],[10,"approx_ulps","","",9],[10,"approx_eq_eps","","",9],[10,"approx_eq_ulps","","",9],[10,"nrows","","",9],[10,"set_row","","",9],[10,"row","","",9],[10,"ncols","","",9],[10,"set_col","","",9],[10,"col","","",9],[10,"col_slice","","",9],[10,"row_slice","","",9],[10,"from_diag","","",9],[10,"set_diag","","",9],[10,"diag","","",9],[10,"outer","","",15],[10,"eigen_qr","","",9],[10,"hash","","",35],[10,"fmt","","",35],[10,"clone","","",35],[10,"decode","","",35],[10,"encode","","",35],[10,"eq","","",35],[10,"ne","","",35],[10,"new","","Builds a 2 dimensional rotation matrix from an angle in radian.",35],[10,"rotation","","",35],[10,"inv_rotation","","",35],[10,"append_rotation","","",35],[10,"append_rotation_cpy","","",35],[10,"prepend_rotation","","",35],[10,"prepend_rotation_cpy","","",35],[10,"set_rotation","","",35],[10,"rand","","",35],[10,"absolute_rotate","","",35],[10,"hash","","",36],[10,"fmt","","",36],[10,"clone","","",36],[10,"decode","","",36],[10,"encode","","",36],[10,"eq","","",36],[10,"ne","","",36],[10,"new","","Builds a 3 dimensional rotation matrix from an axis and an angle.",36],[10,"new_with_mat","","Builds a rotation matrix from an orthogonal matrix.",36],[10,"new_with_euler_angles","","Creates a new rotation from Euler angles.",36],[10,"look_at","","Reorient this matrix such that its local `x` axis points to a given point. Note that the\nusually known `look_at` function does the same thing but with the `z` axis. See `look_at_z`\nfor that.",36],[10,"look_at_z","","Reorient this matrix such that its local `z` axis points to a given point.",36],[10,"rotation","","",36],[10,"inv_rotation","","",36],[10,"append_rotation","","",36],[10,"append_rotation_cpy","","",36],[10,"prepend_rotation","","",36],[10,"prepend_rotation_cpy","","",36],[10,"set_rotation","","",36],[10,"rand","","",36],[10,"absolute_rotate","","",36],[10,"hash","","",37],[10,"fmt","","",37],[10,"clone","","",37],[10,"decode","","",37],[10,"encode","","",37],[10,"eq","","",37],[10,"ne","","",37],[10,"absolute_rotate","","",37],[10,"rotation","","",37],[10,"inv_rotation","","",37],[10,"append_rotation","","",37],[10,"append_rotation_cpy","","",37],[10,"prepend_rotation","","",37],[10,"prepend_rotation_cpy","","",37],[10,"set_rotation","","",37],[10,"submat","","",35],[10,"rotate","","",35],[10,"inv_rotate","","",35],[10,"rotate","","",35],[10,"inv_rotate","","",35],[10,"transform","","",35],[10,"inv_transform","","",35],[10,"transform","","",35],[10,"inv_transform","","",35],[10,"dim","","",35],[10,"mul","","",35],[10,"mul","","",35],[10,"mul","","",11],[10,"mul","","",35],[10,"mul","","",17],[10,"one","","",35],[10,"to_rot_mat","","",35],[10,"ncols","","",35],[10,"col","","",35],[10,"set_col","","",35],[10,"nrows","","",35],[10,"row","","",35],[10,"set_row","","",35],[10,"index","","",35],[10,"abs","","",35],[10,"to_homogeneous","","",35],[10,"inv","","",35],[10,"inv_cpy","","",35],[10,"transpose_cpy","","",35],[10,"transpose","","",35],[10,"approx_epsilon","","",35],[10,"approx_ulps","","",35],[10,"approx_eq","","",35],[10,"approx_eq_eps","","",35],[10,"approx_eq_ulps","","",35],[10,"submat","","",36],[10,"rotate","","",36],[10,"inv_rotate","","",36],[10,"rotate","","",36],[10,"inv_rotate","","",36],[10,"transform","","",36],[10,"inv_transform","","",36],[10,"transform","","",36],[10,"inv_transform","","",36],[10,"dim","","",36],[10,"mul","","",36],[10,"mul","","",36],[10,"mul","","",12],[10,"mul","","",36],[10,"mul","","",18],[10,"one","","",36],[10,"to_rot_mat","","",36],[10,"ncols","","",36],[10,"col","","",36],[10,"set_col","","",36],[10,"nrows","","",36],[10,"row","","",36],[10,"set_row","","",36],[10,"index","","",36],[10,"abs","","",36],[10,"to_homogeneous","","",36],[10,"inv","","",36],[10,"inv_cpy","","",36],[10,"transpose_cpy","","",36],[10,"transpose","","",36],[10,"approx_epsilon","","",36],[10,"approx_ulps","","",36],[10,"approx_eq","","",36],[10,"approx_eq_eps","","",36],[10,"approx_eq_ulps","","",36],[10,"submat","","",37],[10,"rotate","","",37],[10,"inv_rotate","","",37],[10,"rotate","","",37],[10,"inv_rotate","","",37],[10,"transform","","",37],[10,"inv_transform","","",37],[10,"transform","","",37],[10,"inv_transform","","",37],[10,"dim","","",37],[10,"mul","","",37],[10,"mul","","",37],[10,"mul","","",13],[10,"mul","","",37],[10,"mul","","",19],[10,"one","","",37],[10,"to_rot_mat","","",37],[10,"ncols","","",37],[10,"col","","",37],[10,"set_col","","",37],[10,"nrows","","",37],[10,"row","","",37],[10,"set_row","","",37],[10,"index","","",37],[10,"abs","","",37],[10,"to_homogeneous","","",37],[10,"inv","","",37],[10,"inv_cpy","","",37],[10,"transpose_cpy","","",37],[10,"transpose","","",37],[10,"approx_epsilon","","",37],[10,"approx_ulps","","",37],[10,"approx_eq","","",37],[10,"approx_eq_eps","","",37],[10,"approx_eq_ulps","","",37],[10,"fmt","","",1],[10,"clone","","",1],[10,"decode","","",1],[10,"encode","","",1],[10,"eq","","",1],[10,"ne","","",1],[10,"fmt","","",2],[10,"clone","","",2],[10,"decode","","",2],[10,"encode","","",2],[10,"eq","","",2],[10,"ne","","",2],[10,"fmt","","",3],[10,"clone","","",3],[10,"decode","","",3],[10,"encode","","",3],[10,"eq","","",3],[10,"ne","","",3],[10,"look_at","","Reorient and translate this transformation such that its local `x` axis points to a given\ndirection.  Note that the usually known `look_at` function does the same thing but with the\n`z` axis. See `look_at_z` for that.",2],[10,"look_at_z","","Reorient and translate this transformation such that its local `z` axis points to a given\ndirection.",2],[10,"new_with_rotmat","","Creates a new isometry from a rotation matrix and a vector.",3],[10,"new","","Creates a new isometry from a rotation matrix and a vector.",1],[10,"new_with_rotmat","","Creates a new isometry from a rotation matrix and a vector.",1],[10,"to_rot_mat","","",1],[10,"rotation","","",1],[10,"inv_rotation","","",1],[10,"append_rotation","","",1],[10,"append_rotation_cpy","","",1],[10,"prepend_rotation","","",1],[10,"prepend_rotation_cpy","","",1],[10,"set_rotation","","",1],[10,"dim","","",1],[10,"one","","",1],[10,"absolute_rotate","","",1],[10,"rand","","",1],[10,"approx_epsilon","","",1],[10,"approx_ulps","","",1],[10,"approx_eq_eps","","",1],[10,"approx_eq_ulps","","",1],[10,"to_homogeneous","","",1],[10,"inv","","",1],[10,"inv_cpy","","",1],[10,"transform","","",1],[10,"inv_transform","","",1],[10,"transformation","","",1],[10,"inv_transformation","","",1],[10,"append_transformation","","",1],[10,"append_transformation_cpy","","",1],[10,"prepend_transformation","","",1],[10,"prepend_transformation_cpy","","",1],[10,"set_transformation","","",1],[10,"rotate","","",1],[10,"inv_rotate","","",1],[10,"translation","","",1],[10,"inv_translation","","",1],[10,"append_translation","","",1],[10,"append_translation_cpy","","",1],[10,"prepend_translation","","",1],[10,"prepend_translation_cpy","","",1],[10,"set_translation","","",1],[10,"translate","","",1],[10,"inv_translate","","",1],[10,"mul","","",1],[10,"mul","","",1],[10,"mul","","",17],[10,"new","","Creates a new isometry from a rotation matrix and a vector.",2],[10,"new_with_rotmat","","Creates a new isometry from a rotation matrix and a vector.",2],[10,"to_rot_mat","","",2],[10,"rotation","","",2],[10,"inv_rotation","","",2],[10,"append_rotation","","",2],[10,"append_rotation_cpy","","",2],[10,"prepend_rotation","","",2],[10,"prepend_rotation_cpy","","",2],[10,"set_rotation","","",2],[10,"dim","","",2],[10,"one","","",2],[10,"absolute_rotate","","",2],[10,"rand","","",2],[10,"approx_epsilon","","",2],[10,"approx_ulps","","",2],[10,"approx_eq_eps","","",2],[10,"approx_eq_ulps","","",2],[10,"to_homogeneous","","",2],[10,"inv","","",2],[10,"inv_cpy","","",2],[10,"transform","","",2],[10,"inv_transform","","",2],[10,"transformation","","",2],[10,"inv_transformation","","",2],[10,"append_transformation","","",2],[10,"append_transformation_cpy","","",2],[10,"prepend_transformation","","",2],[10,"prepend_transformation_cpy","","",2],[10,"set_transformation","","",2],[10,"rotate","","",2],[10,"inv_rotate","","",2],[10,"translation","","",2],[10,"inv_translation","","",2],[10,"append_translation","","",2],[10,"append_translation_cpy","","",2],[10,"prepend_translation","","",2],[10,"prepend_translation_cpy","","",2],[10,"set_translation","","",2],[10,"translate","","",2],[10,"inv_translate","","",2],[10,"mul","","",2],[10,"mul","","",2],[10,"mul","","",18],[10,"dim","","",3],[10,"one","","",3],[10,"absolute_rotate","","",3],[10,"approx_epsilon","","",3],[10,"approx_ulps","","",3],[10,"approx_eq_eps","","",3],[10,"approx_eq_ulps","","",3],[10,"to_homogeneous","","",3],[10,"inv","","",3],[10,"inv_cpy","","",3],[10,"transform","","",3],[10,"inv_transform","","",3],[10,"transformation","","",3],[10,"inv_transformation","","",3],[10,"append_transformation","","",3],[10,"append_transformation_cpy","","",3],[10,"prepend_transformation","","",3],[10,"prepend_transformation_cpy","","",3],[10,"set_transformation","","",3],[10,"rotate","","",3],[10,"inv_rotate","","",3],[10,"translation","","",3],[10,"inv_translation","","",3],[10,"append_translation","","",3],[10,"append_translation_cpy","","",3],[10,"prepend_translation","","",3],[10,"prepend_translation_cpy","","",3],[10,"set_translation","","",3],[10,"translate","","",3],[10,"inv_translate","","",3],[10,"mul","","",3],[10,"mul","","",3],[10,"mul","","",19],[10,"fmt","","",38],[10,"clone","","",38],[10,"decode","","",38],[10,"encode","","",38],[10,"eq","","",38],[10,"ne","","",38],[10,"fmt","","",39],[10,"clone","","",39],[10,"decode","","",39],[10,"encode","","",39],[10,"eq","","",39],[10,"ne","","",39],[10,"new","","Creates a new 3D perspective projection.",38],[10,"to_mat","","Builds a 4D projection matrix (using homogeneous coordinates) for this projection.",38],[10,"to_persp_mat","","Build a `PerspMat3` representing this projection.",38],[10,"aspect","","Gets the `width / height` aspect ratio.",38],[10,"fov","","Gets the field of view of the view frustrum.",38],[10,"znear","","Gets the near plane offset of the view frustrum.",38],[10,"zfar","","Gets the far plane offset of the view frustrum.",38],[10,"set_aspect","","Sets the `width / height` aspect ratio of the view frustrum.",38],[10,"set_fov","","Sets the field of view of the view frustrum.",38],[10,"set_znear","","Sets the near plane offset of the view frustrum.",38],[10,"set_zfar","","Sets the far plane offset of the view frustrum.",38],[10,"project_pnt","","Projects a point.",38],[10,"project_vec","","Projects a vector.",38],[10,"new","","Creates a new persepctive matrix from the aspect ratio, field of view, and near/far planes.",39],[10,"new_with_mat","","Creates a new perspective projection matrix from a 4D matrix.",39],[10,"as_mat","","Returns a reference to the 4D matrix (using homogeneous coordinates) of this projection.",39],[10,"aspect","","Gets the `width / height` aspect ratio of the view frustrum.",39],[10,"fov","","Gets the field of view of the view frustrum.",39],[10,"znear","","Gets the near plane offset of the view frustrum.",39],[10,"zfar","","Gets the far plane offset of the view frustrum.",39],[10,"set_aspect","","Updates this projection matrix with a new `width / height` aspect ratio of the view\nfrustrum.",39],[10,"set_fov","","Updates this projection with a new field of view of the view frustrum.",39],[10,"set_znear","","Updates this projection matrix with a new near plane offset of the view frustrum.",39],[10,"set_zfar","","Updates this projection matrix with a new far plane offset of the view frustrum.",39],[10,"set_znear_and_zfar","","Updates this projection matrix with new near and far plane offsets of the view frustrum.",39],[10,"project_pnt","","Projects a point.",39],[10,"project_vec","","Projects a vector.",39],[10,"to_mat","","Returns the 4D matrix (using homogeneous coordinates) of this projection.",39],[10,"fmt","","",40],[10,"clone","","",40],[10,"decode","","",40],[10,"encode","","",40],[10,"eq","","",40],[10,"ne","","",40],[10,"fmt","","",41],[10,"clone","","",41],[10,"decode","","",41],[10,"encode","","",41],[10,"eq","","",41],[10,"ne","","",41],[10,"new","","Creates a new 3D orthographic projection.",40],[10,"to_mat","","Builds a 4D projection matrix (using homogeneous coordinates) for this projection.",40],[10,"to_persp_mat","","Build a `OrthoMat3` representing this projection.",40],[10,"width","","The width of the view cuboid.",40],[10,"height","","The height of the view cuboid.",40],[10,"znear","","The near plane offset of the view cuboid.",40],[10,"zfar","","The far plane offset of the view cuboid.",40],[10,"set_width","","Sets the width of the view cuboid.",40],[10,"set_height","","Sets the height of the view cuboid.",40],[10,"set_znear","","Sets the near plane offset of the view cuboid.",40],[10,"set_zfar","","Sets the far plane offset of the view cuboid.",40],[10,"project_pnt","","Projects a point.",40],[10,"project_vec","","Projects a vector.",40],[10,"new","","Creates a new orthographic projection matrix from the width, heihgt, znear and zfar planes of the view cuboid.",41],[10,"new_with_mat","","Creates a new orthographic matrix from a 4D matrix.",41],[10,"as_mat","","Returns a reference to the 4D matrix (using homogeneous coordinates) of this projection.",41],[10,"width","","The width of the view cuboid.",41],[10,"height","","The height of the view cuboid.",41],[10,"znear","","The near plane offset of the view cuboid.",41],[10,"zfar","","The far plane offset of the view cuboid.",41],[10,"set_width","","Sets the width of the view cuboid.",41],[10,"set_height","","Sets the height of the view cuboid.",41],[10,"set_znear","","Sets the near plane offset of the view cuboid.",41],[10,"set_zfar","","Sets the far plane offset of the view cuboid.",41],[10,"set_znear_and_zfar","","Sets the near and far plane offsets of the view cuboid.",41],[10,"project_pnt","","Projects a point.",41],[10,"project_vec","","Projects a vector.",41],[10,"to_mat","","Returns the 4D matrix (using homogeneous coordinates) of this projection.",41],[10,"fmt","","",23],[10,"clone","","",23],[10,"decode","","",23],[10,"encode","","",23],[10,"eq","","",23],[10,"ne","","",23],[10,"is_eq","","Returns `true` if `self` is equal to `Equal`.",23],[10,"is_lt","","Returns `true` if `self` is equal to `Less`.",23],[10,"is_le","","Returns `true` if `self` is equal to `Less` or `Equal`.",23],[10,"is_gt","","Returns `true` if `self` is equal to `Greater`.",23],[10,"is_ge","","Returns `true` if `self` is equal to `Greater` or `Equal`.",23],[10,"is_not_comparable","","Returns `true` if `self` is equal to `NotComparable`.",23],[10,"from_ordering","","Creates a `POrdering` from an `Ordering`.",23],[10,"to_ordering","","Converts this `POrdering` to an `Ordering`.",23],[6,"Absolute","","Trait of objects having an absolute value.\nThis is useful if the object does not have the same type as its absolute value."],[9,"abs","","Computes some absolute value of this object.\nTypically, this will make all component of a matrix or vector positive.",42],[6,"AbsoluteRotate","","Composition of a rotation and an absolute value."],[9,"absolute_rotate","","This is the same as:",43],[6,"ApproxEq","","Trait for testing approximate equality"],[9,"approx_epsilon","","Default epsilon for approximation.",44],[9,"approx_eq_eps","","Tests approximate equality using a custom epsilon.",44],[9,"approx_ulps","","Default ULPs for approximation.",44],[9,"approx_eq_ulps","","Tests approximate equality using units in the last place (ULPs)",44],[10,"approx_eq","","Tests approximate equality.",44],[6,"Axpy","","Trait of objects implementing the `y = ax + y` operation."],[9,"axpy","","Adds $$a * x$$ to `self`.",45],[6,"Basis","","Traits of objects which can form a basis (typically vectors)."],[9,"canonical_basis","","Iterates through the canonical basis of the space in which this object lives.",46],[9,"orthonormal_subspace_basis","","Iterates through a basis of the subspace orthogonal to `self`.",46],[9,"canonical_basis_element","","Gets the ith element of the canonical basis.",46],[6,"BaseFloat","","Basic floating-point number numeric trait."],[9,"pi","","Archimedes' constant.",47],[9,"two_pi","","2.0 * pi.",47],[9,"frac_pi_2","","pi / 2.0.",47],[9,"frac_pi_3","","pi / 3.0.",47],[9,"frac_pi_4","","pi / 4.0.",47],[9,"frac_pi_6","","pi / 6.0.",47],[9,"frac_pi_8","","pi / 8.0.",47],[9,"frac_1_pi","","1.0 / pi.",47],[9,"frac_2_pi","","2.0 / pi.",47],[9,"frac_2_sqrtpi","","2.0 / sqrt(pi).",47],[9,"e","","Euler's number.",47],[9,"log2_e","","log2(e).",47],[9,"log10_e","","log10(e).",47],[9,"ln_2","","ln(2.0).",47],[9,"ln_10","","ln(10.0).",47],[6,"BaseNum","","Basic integral numeric trait."],[6,"Bounded","","Types that have maximum and minimum value."],[9,"min_value","","The minimum value.",48],[9,"max_value","","The maximum value.",48],[6,"Cast","","Traits of objects which can be created from an object of type `T`."],[9,"from","","Converts an element of type `T` to an element of type `Self`.",49],[6,"Col","","Trait to access columns of a matrix or vector."],[9,"ncols","","The number of column of this matrix or vector.",50],[9,"col","","Reads the `i`-th column of `self`.",50],[9,"set_col","","Writes the `i`-th column of `self`.",50],[6,"ColSlice","","Trait to access part of a column of a matrix"],[9,"col_slice","","Returns a view to a slice of a column of a matrix.",51],[6,"RowSlice","","Trait to access part of a row of a matrix"],[9,"row_slice","","Returns a view to a slice of a row of a matrix.",52],[6,"Cov","","Trait for computing the covariance of a set of data."],[9,"cov","","Computes the covariance of the obsevations stored by `m`:",53],[10,"cov_to","","Computes the covariance of the obsevations stored by `m`:",53],[6,"Cross","","Trait of elements having a cross product."],[17,"Output","nalgebra::Cross",""],[9,"cross","nalgebra","Computes the cross product between two elements (usually vectors).",54],[6,"CrossMatrix","","Trait of elements having a cross product operation which can be expressed as a matrix."],[9,"cross_matrix","","The matrix associated to any cross product with this vector. I.e. `v.cross(anything)` =\n`v.cross_matrix().rmul(anything)`.",55],[6,"Det","","Trait of objects having a determinant. Typically used by square matrices."],[9,"det","","Returns the determinant of `m`.",56],[6,"Diag","","Trait to get the diagonal of square matrices."],[9,"from_diag","","Creates a new matrix with the given diagonal.",57],[9,"set_diag","","Sets the diagonal of this matrix.",57],[9,"diag","","The diagonal of this matrix.",57],[6,"Dim","","Trait of objects having a spacial dimension known at compile time."],[9,"dim","","The dimension of the object.",58],[6,"Dot","","Traits of objects having a dot product."],[9,"dot","","Computes the dot (inner) product of two vectors.",59],[6,"EigenQR","","Trait for computing the eigenvector and eigenvalues of a square matrix usin the QR algorithm."],[9,"eigen_qr","","Computes the eigenvectors and eigenvalues of this matrix.",60],[6,"Eye","","Trait for constructing the identity matrix"],[9,"new_identity","","Return the identity matrix of specified dimension",61],[6,"FloatPnt","","Trait of points with components implementing the `BaseFloat` trait."],[10,"sqdist","","Computes the square distance between two points.",62],[10,"dist","","Computes the distance between two points.",62],[6,"FloatVec","","Trait of vector with components implementing the `BaseFloat` trait."],[6,"FromHomogeneous","","Traits of objects which can be build from an homogeneous coordinate form."],[9,"from","","Builds an object from its homogeneous coordinate form.",63],[6,"Indexable","","This is a workaround of current Rust limitations."],[9,"at","","Reads the `i`-th element of `self`.",64],[9,"set","","Writes to the `i`-th element of `self`.",64],[9,"swap","","Swaps the `i`-th element of `self` with its `j`-th element.",64],[9,"unsafe_at","","Reads the `i`-th element of `self`.",64],[9,"unsafe_set","","Writes to the `i`-th element of `self`.",64],[6,"Inv","","Trait of objects having an inverse. Typically used to implement matrix inverse."],[9,"inv_cpy","","Returns the inverse of `m`.",65],[9,"inv","","In-place version of `inverse`.",65],[6,"Iterable","","This is a workaround of current Rust limitations."],[9,"iter","","Gets a vector-like read-only iterator.",66],[6,"IterableMut","","This is a workaround of current Rust limitations."],[9,"iter_mut","","Gets a vector-like read-write iterator.",67],[6,"LMul","","Trait of objects having a left multiplication with another element."],[9,"lmul","","Computes `v * self`",68],[6,"Mat","","Trait of matrices."],[6,"Mean","","Trait for computing the covariance of a set of data."],[9,"mean","","Computes the mean of the observations stored by `v`.\n \n  * For matrices, observations are stored in its rows.\n  * For vectors, observations are stored in its components (thus are 1-dimensional).",69],[6,"Norm","","Traits of objects having an euclidian norm."],[10,"norm","","Computes the norm of `self`.",70],[9,"sqnorm","","Computes the squared norm of `self`.",70],[9,"normalize_cpy","","Gets the normalized version of a copy of `v`.",70],[9,"normalize","","Normalizes `self`.",70],[6,"NumPnt","","Trait grouping most common operations on points."],[6,"NumVec","","Trait grouping most common operations on vectors."],[6,"One","","Multiplicative identity."],[9,"one","","Returns the multiplicative identity.",71],[6,"Orig","","The zero element of a vector space, seen as an element of its embeding affine space."],[9,"orig","","The trivial origin.",72],[9,"is_orig","","Returns true if this points is exactly the trivial origin.",72],[6,"Outer","","Traits of objects having an outer product."],[9,"outer","","Computes the outer product: `a * b`",73],[6,"POrd","","Pointwise ordering operations."],[9,"inf","","Returns the infimum of this value and another",74],[9,"sup","","Returns the supremum of this value and another",74],[9,"partial_cmp","","Compare `self` and `other` using a partial ordering relation.",74],[10,"partial_le","","Returns `true` iff `self` and `other` are comparable and `self <= other`.",74],[10,"partial_lt","","Returns `true` iff `self` and `other` are comparable and `self < other`.",74],[10,"partial_ge","","Returns `true` iff `self` and `other` are comparable and `self >= other`.",74],[10,"partial_gt","","Returns `true` iff `self` and `other` are comparable and `self > other`.",74],[10,"partial_min","","Return the minimum of `self` and `other` if they are comparable.",74],[10,"partial_max","","Return the maximum of `self` and `other` if they are comparable.",74],[10,"partial_clamp","","Clamp `value` between `min` and `max`. Returns `None` if `value` is not comparable to\n`min` or `max`.",74],[6,"PntAsVec","","Trait that relates a point of an affine space to a vector of the associated vector space."],[9,"to_vec","","Converts this point to its associated vector.",75],[9,"as_vec","","Converts a reference to this point to a reference to its associated vector.",75],[9,"set_coords","","Sets the coordinates of this point to match those of a given vector.",75],[6,"RMul","","Trait of objects having a right multiplication with another element."],[9,"rmul","","Computes `self * v`",76],[6,"Rotate","","Trait of objects able to rotate other objects."],[9,"rotate","","Applies a rotation to `v`.",77],[9,"inv_rotate","","Applies an inverse rotation to `v`.",77],[6,"Rotation","","Trait of object which can represent a rotation, and to which new rotations can be appended. A\nrotation is assumed to be an isometry without translation and without reflexion."],[9,"rotation","","Gets the rotation associated with `self`.",78],[9,"inv_rotation","","Gets the inverse rotation associated with `self`.",78],[9,"append_rotation","","Appends a rotation to this object.",78],[9,"append_rotation_cpy","","Appends the rotation `amount` to a copy of `t`.",78],[9,"prepend_rotation","","Prepends a rotation to this object.",78],[9,"prepend_rotation_cpy","","Prepends the rotation `amount` to a copy of `t`.",78],[9,"set_rotation","","Sets the rotation of `self`.",78],[6,"RotationMatrix","","Trait of transformation having a rotation extractable as a rotation matrix. This can typically\nbe implemented by quaternions to convert them to a rotation matrix."],[17,"Output","nalgebra::RotationMatrix",""],[9,"to_rot_mat","nalgebra","Gets the rotation matrix represented by `self`.",79],[6,"RotationWithTranslation","","Various composition of rotation and translation."],[10,"append_rotation_wrt_point_cpy","","Applies a rotation centered on a specific point.",80],[10,"append_rotation_wrt_point","","Rotates `self` using a specific center of rotation.",80],[10,"append_rotation_wrt_center_cpy","","Applies a rotation centered on the translation of `m`.\n \n# Arguments\n  * `t` - the object to be rotated.\n  * `amount` - the rotation to apply.",80],[10,"append_rotation_wrt_center","","Applies a rotation centered on the translation of `m`.",80],[6,"Row","","Trait to access rows of a matrix or a vector."],[9,"nrows","","The number of column of `self`.",81],[9,"row","","Reads the `i`-th row of `self`.",81],[9,"set_row","","Writes the `i`-th row of `self`.",81],[6,"ScalarAdd","","Trait of objects having an addition with a scalar."],[9,"add_s","","Gets the result of `self + n`.",82],[6,"ScalarSub","","Trait of objects having a subtraction with a scalar."],[9,"sub_s","","Gets the result of `self - n`.",83],[6,"ScalarMul","","Trait of objects having a multiplication with a scalar."],[9,"mul_s","","Gets the result of `self * n`.",84],[6,"ScalarDiv","","Trait of objects having a division by a scalar."],[9,"div_s","","Gets the result of `self / n`.",85],[6,"Shape","","The shape of an indexable object."],[9,"shape","","Returns the shape of an indexable object.",86],[6,"SquareMat","","Trait implemented by square matrices."],[6,"ToHomogeneous","","Traits of objects which can be put in homogeneous coordinates form."],[9,"to_homogeneous","","Gets the homogeneous coordinates form of this object.",87],[6,"Transform","","Trait of objects able to transform other objects."],[9,"transform","","Applies a transformation to `v`.",88],[9,"inv_transform","","Applies an inverse transformation to `v`.",88],[6,"Transformation","","Trait of object which represent a transformation, and to which new transformations can\nbe appended."],[9,"transformation","","Gets the transformation of `self`.",89],[9,"inv_transformation","","Gets the inverse transformation of `self`.",89],[9,"append_transformation","","Appends a transformation to this object.",89],[9,"append_transformation_cpy","","Appends the transformation `amount` to a copy of `t`.",89],[9,"prepend_transformation","","Prepends a transformation to this object.",89],[9,"prepend_transformation_cpy","","Prepends the transformation `amount` to a copy of `t`.",89],[9,"set_transformation","","Sets the transformation of `self`.",89],[6,"Translate","","Trait of objects able to translate other objects. This is typically\nimplemented by vectors to translate points."],[9,"translate","","Apply a translation to an object.",90],[9,"inv_translate","","Apply an inverse translation to an object.",90],[6,"Translation","","Trait of object which represent a translation, and to wich new translation\ncan be appended."],[9,"translation","","Gets the translation associated with this object.",91],[9,"inv_translation","","Gets the inverse translation associated with this object.",91],[9,"append_translation","","Appends a translation to this object.",91],[9,"append_translation_cpy","","Appends the translation `amount` to a copy of `t`.",91],[9,"prepend_translation","","Prepends a translation to this object.",91],[9,"prepend_translation_cpy","","Prepends the translation `amount` to a copy of `t`.",91],[9,"set_translation","","Sets the translation.",91],[6,"Transpose","","Trait of objects which can be transposed."],[9,"transpose_cpy","","Computes the transpose of a matrix.",92],[9,"transpose","","In-place version of `transposed`.",92],[6,"UniformSphereSample","","Trait of vectors able to sample a unit sphere."],[9,"sample","","Iterate through the samples.",93],[6,"VecAsPnt","","Trait that relates a point of an affine space to a vector of the associated vector space."],[9,"to_pnt","","Converts this point to its associated vector.",94],[9,"as_pnt","","Converts a reference to this point to a reference to its associated vector.",94],[6,"Zero","","Additive identity."],[9,"zero","","Returns the additive identity.",95],[9,"is_zero","","Tests if `self` is exactly zero.",95],[15,"assert_approx_eq_eps!","","Asserts approximate equality within a given tolerance of two values with the\n`ApproxEq` trait."],[15,"assert_approx_eq_ulps!","","Asserts approximate equality within a given tolerance of two values with the\n`ApproxEq` trait, with tolerance specified in ULPs."],[15,"assert_approx_eq!","","Asserts approximate equality of two values with the `ApproxEq` trait."],[10,"append_rotation_wrt_point_cpy","","Applies a rotation centered on a specific point.",80],[10,"append_rotation_wrt_point","","Rotates `self` using a specific center of rotation.",80],[10,"append_rotation_wrt_center_cpy","","Applies a rotation centered on the translation of `m`.\n \n# Arguments\n  * `t` - the object to be rotated.\n  * `amount` - the rotation to apply.",80],[10,"append_rotation_wrt_center","","Applies a rotation centered on the translation of `m`.",80],[10,"norm","","Computes the norm of `self`.",70],[10,"sqdist","","Computes the square distance between two points.",62],[10,"dist","","Computes the distance between two points.",62],[10,"partial_le","","Returns `true` iff `self` and `other` are comparable and `self <= other`.",74],[10,"partial_lt","","Returns `true` iff `self` and `other` are comparable and `self < other`.",74],[10,"partial_ge","","Returns `true` iff `self` and `other` are comparable and `self >= other`.",74],[10,"partial_gt","","Returns `true` iff `self` and `other` are comparable and `self > other`.",74],[10,"partial_min","","Return the minimum of `self` and `other` if they are comparable.",74],[10,"partial_max","","Return the maximum of `self` and `other` if they are comparable.",74],[10,"partial_clamp","","Clamp `value` between `min` and `max`. Returns `None` if `value` is not comparable to\n`min` or `max`.",74],[10,"approx_eq","","Tests approximate equality.",44],[10,"cov_to","","Computes the covariance of the obsevations stored by `m`:",53]],"paths":[[1,"DVec"],[1,"Iso2"],[1,"Iso3"],[1,"Iso4"],[1,"Mat1"],[1,"Mat2"],[1,"Mat3"],[1,"Mat4"],[1,"Mat5"],[1,"Mat6"],[1,"Vec1"],[1,"Vec2"],[1,"Vec3"],[1,"Vec4"],[1,"Vec5"],[1,"Vec6"],[1,"Pnt1"],[1,"Pnt2"],[1,"Pnt3"],[1,"Pnt4"],[1,"Pnt5"],[1,"Pnt6"],[1,"Quat"],[2,"POrdering"],[1,"DMat"],[1,"DVec1"],[1,"DVec2"],[1,"DVec3"],[1,"DVec4"],[1,"DVec5"],[1,"DVec6"],[1,"Vec0"],[1,"Pnt0"],[1,"UnitQuat"],[1,"Identity"],[1,"Rot2"],[1,"Rot3"],[1,"Rot4"],[1,"Persp3"],[1,"PerspMat3"],[1,"Ortho3"],[1,"OrthoMat3"],[6,"Absolute"],[6,"AbsoluteRotate"],[6,"ApproxEq"],[6,"Axpy"],[6,"Basis"],[6,"BaseFloat"],[6,"Bounded"],[6,"Cast"],[6,"Col"],[6,"ColSlice"],[6,"RowSlice"],[6,"Cov"],[6,"Cross"],[6,"CrossMatrix"],[6,"Det"],[6,"Diag"],[6,"Dim"],[6,"Dot"],[6,"EigenQR"],[6,"Eye"],[6,"FloatPnt"],[6,"FromHomogeneous"],[6,"Indexable"],[6,"Inv"],[6,"Iterable"],[6,"IterableMut"],[6,"LMul"],[6,"Mean"],[6,"Norm"],[6,"One"],[6,"Orig"],[6,"Outer"],[6,"POrd"],[6,"PntAsVec"],[6,"RMul"],[6,"Rotate"],[6,"Rotation"],[6,"RotationMatrix"],[6,"RotationWithTranslation"],[6,"Row"],[6,"ScalarAdd"],[6,"ScalarSub"],[6,"ScalarMul"],[6,"ScalarDiv"],[6,"Shape"],[6,"ToHomogeneous"],[6,"Transform"],[6,"Transformation"],[6,"Translate"],[6,"Translation"],[6,"Transpose"],[6,"UniformSphereSample"],[6,"VecAsPnt"],[6,"Zero"]]};
searchIndex['rustc-serialize'] = {"items":[[0,"","rustc-serialize","Support code for encoding and decoding types."],[10,"encode","collections::string","",0],[10,"decode","","",0],[10,"encode","alloc::boxed","",1],[10,"decode","","",1],[10,"decode","","",1],[10,"encode","alloc::rc","",2],[10,"decode","","",2],[10,"encode","collections::vec","",3],[10,"decode","","",3],[10,"encode","core::option","",4],[10,"decode","","",4],[10,"encode","std::path::posix","",5],[10,"decode","","",5],[10,"encode","std::path::windows","",6],[10,"decode","","",6],[10,"encode","core::cell","",7],[10,"decode","","",7],[10,"encode","","",8],[10,"decode","","",8],[10,"encode","alloc::arc","",9],[10,"decode","","",9],[10,"encode","collections::dlist","",10],[10,"decode","","",10],[10,"encode","collections::ring_buf","",11],[10,"decode","","",11],[10,"encode","collections::btree::map","",12],[10,"decode","","",12],[10,"encode","collections::btree::set","",13],[10,"decode","","",13],[10,"encode","std::collections::hash::map","",14],[10,"decode","","",14],[10,"encode","std::collections::hash::set","",15],[10,"decode","","",15],[10,"encode","collections::vec_map","",16],[10,"decode","","",16],[0,"base64","rustc-serialize","Base64 binary-to-text encoding"],[1,"Config","rustc-serialize::base64","Contains configuration parameters for `to_base64`."],[11,"char_set","","Character set to use",17],[11,"newline","","Newline to use",17],[11,"pad","","True to pad output with `=` characters",17],[11,"line_length","","`Some(len)` to wrap lines at `len`, `None` to disable line wrapping",17],[2,"CharacterSet","","Available encoding character sets"],[12,"Standard","","The standard character set (uses `+` and `/`)",18],[12,"UrlSafe","","The URL safe character set (uses `-` and `_`)",18],[2,"Newline","","Available newline types"],[12,"LF","","A linefeed (i.e. Unix-style newline)",19],[12,"CRLF","","A carriage return and a linefeed (i.e. Windows-style newline)",19],[2,"FromBase64Error","","Errors that can occur when decoding a base64 encoded string"],[12,"InvalidBase64Byte","","The input contained a character not part of the base64 format",20],[12,"InvalidBase64Length","","The input had an invalid length",20],[5,"STANDARD","","Configuration for RFC 4648 standard base64 encoding"],[5,"URL_SAFE","","Configuration for RFC 4648 base64url encoding"],[5,"MIME","","Configuration for RFC 2045 MIME base64 encoding"],[6,"ToBase64","","A trait for converting a value to base64 encoding."],[9,"to_base64","","Converts the value of `self` to a base64 value following the specified\nformat configuration, returning the owned string.",21],[6,"FromBase64","","A trait for converting from base64 encoded values."],[9,"from_base64","","Converts the value of `self`, interpreted as base64 encoded data, into\nan owned vector of bytes, returning the vector.",22],[10,"fmt","","",20],[10,"description","","",20],[10,"detail","","",20],[0,"hex","rustc-serialize","Hex binary-to-text encoding"],[2,"FromHexError","rustc-serialize::hex","Errors that can occur when decoding a hex encoded string"],[12,"InvalidHexCharacter","","The input contained a character not part of the hex format",23],[12,"InvalidHexLength","","The input had an invalid length",23],[6,"ToHex","","A trait for converting a value to hexadecimal encoding"],[9,"to_hex","","Converts the value of `self` to a hex value, returning the owned\nstring.",24],[6,"FromHex","","A trait for converting hexadecimal encoded values"],[9,"from_hex","","Converts the value of `self`, interpreted as hexadecimal encoded data,\ninto an owned vector of bytes, returning the vector.",25],[10,"fmt","","",23],[10,"description","","",23],[10,"detail","","",23],[0,"json","rustc-serialize","JSON parsing and serialization"],[1,"PrettyJson","rustc-serialize::json",""],[1,"AsJson","",""],[1,"AsPrettyJson","",""],[1,"Encoder","","A structure for implementing serialization to JSON."],[1,"PrettyEncoder","","Another encoder for JSON, but prints out human-readable JSON instead of\ncompact data"],[1,"Stack","","A Stack represents the current position of the parser in the logical\nstructure of the JSON stream.\nFor example foo.bar[3].x"],[1,"Parser","","A streaming JSON parser implemented as an iterator of JsonEvent, consuming\nan iterator of char."],[1,"Builder","","A Builder consumes a json::Parser to create a generic Json structure."],[1,"Decoder","","A structure to decode JSON to values in rust."],[2,"Json","","Represents a json value"],[12,"I64","","",26],[12,"U64","","",26],[12,"F64","","",26],[12,"String","","",26],[12,"Boolean","","",26],[12,"Array","","",26],[12,"Object","","",26],[12,"Null","","",26],[2,"ErrorCode","","The errors that can arise while parsing a JSON stream."],[12,"InvalidSyntax","","",27],[12,"InvalidNumber","","",27],[12,"EOFWhileParsingObject","","",27],[12,"EOFWhileParsingArray","","",27],[12,"EOFWhileParsingValue","","",27],[12,"EOFWhileParsingString","","",27],[12,"KeyMustBeAString","","",27],[12,"ExpectedColon","","",27],[12,"TrailingCharacters","","",27],[12,"TrailingComma","","",27],[12,"InvalidEscape","","",27],[12,"InvalidUnicodeCodePoint","","",27],[12,"LoneLeadingSurrogateInHexEscape","","",27],[12,"UnexpectedEndOfHexEscape","","",27],[12,"UnrecognizedHex","","",27],[12,"NotFourDigit","","",27],[12,"NotUtf8","","",27],[2,"ParserError","",""],[12,"SyntaxError","","msg, line, col",28],[12,"IoError","","",28],[2,"DecoderError","",""],[12,"ParseError","","",29],[12,"ExpectedError","","",29],[12,"MissingFieldError","","",29],[12,"UnknownVariantError","","",29],[12,"ApplicationError","","",29],[2,"JsonEvent","","The output of the streaming parser."],[12,"ObjectStart","","",30],[12,"ObjectEnd","","",30],[12,"ArrayStart","","",30],[12,"ArrayEnd","","",30],[12,"BooleanValue","","",30],[12,"I64Value","","",30],[12,"U64Value","","",30],[12,"F64Value","","",30],[12,"StringValue","","",30],[12,"NullValue","","",30],[12,"Error","","",30],[2,"StackElement","","StackElements compose a Stack.\nFor example, Key(\"foo\"), Key(\"bar\"), Index(3) and Key(\"x\") are the\nStackElements compositing the stack that represents foo.bar[3].x"],[12,"Index","","",31],[12,"Key","","",31],[3,"error_str","","Returns a readable error string for a given error code."],[3,"decode","","Shortcut function to decode a JSON `&str` into an object"],[3,"encode","","Shortcut function to encode a `T` into a JSON `String`"],[3,"as_json","","Create an `AsJson` wrapper which can be used to print a value as JSON\non-the-fly via `write!`"],[3,"as_pretty_json","","Create an `AsPrettyJson` wrapper which can be used to print a value as JSON\non-the-fly via `write!`"],[4,"Array","",""],[4,"Object","",""],[4,"BuilderError","",""],[4,"EncodeResult","",""],[4,"DecodeResult","",""],[6,"ToJson","","A trait for converting values to JSON"],[9,"to_json","","Converts the value of `self` to an instance of JSON",32],[10,"fmt","","",26],[10,"partial_cmp","","",26],[10,"lt","","",26],[10,"le","","",26],[10,"gt","","",26],[10,"ge","","",26],[10,"eq","","",26],[10,"ne","","",26],[10,"clone","","",26],[10,"eq","","",27],[10,"ne","","",27],[10,"clone","","",27],[10,"fmt","","",28],[10,"eq","","",28],[10,"ne","","",28],[10,"clone","","",28],[10,"fmt","","",29],[10,"eq","","",29],[10,"ne","","",29],[10,"clone","","",29],[10,"fmt","","",27],[10,"description","","",29],[10,"detail","","",29],[10,"new","","Creates a new JSON encoder whose output will be written to the writer\nspecified.",33],[4,"Error","",""],[10,"emit_nil","","",33],[10,"emit_usize","","",33],[10,"emit_u64","","",33],[10,"emit_u32","","",33],[10,"emit_u16","","",33],[10,"emit_u8","","",33],[10,"emit_isize","","",33],[10,"emit_i64","","",33],[10,"emit_i32","","",33],[10,"emit_i16","","",33],[10,"emit_i8","","",33],[10,"emit_bool","","",33],[10,"emit_f64","","",33],[10,"emit_f32","","",33],[10,"emit_char","","",33],[10,"emit_str","","",33],[10,"emit_enum","","",33],[10,"emit_enum_variant","","",33],[10,"emit_enum_variant_arg","","",33],[10,"emit_enum_struct_variant","","",33],[10,"emit_enum_struct_variant_field","","",33],[10,"emit_struct","","",33],[10,"emit_struct_field","","",33],[10,"emit_tuple","","",33],[10,"emit_tuple_arg","","",33],[10,"emit_tuple_struct","","",33],[10,"emit_tuple_struct_arg","","",33],[10,"emit_option","","",33],[10,"emit_option_none","","",33],[10,"emit_option_some","","",33],[10,"emit_seq","","",33],[10,"emit_seq_elt","","",33],[10,"emit_map","","",33],[10,"emit_map_elt_key","","",33],[10,"emit_map_elt_val","","",33],[10,"new","","Creates a new encoder whose output will be written to the specified writer",34],[10,"set_indent","","Set the number of spaces to indent for each level.\nThis is safe to set during encoding.",34],[4,"Error","",""],[10,"emit_nil","","",34],[10,"emit_usize","","",34],[10,"emit_u64","","",34],[10,"emit_u32","","",34],[10,"emit_u16","","",34],[10,"emit_u8","","",34],[10,"emit_isize","","",34],[10,"emit_i64","","",34],[10,"emit_i32","","",34],[10,"emit_i16","","",34],[10,"emit_i8","","",34],[10,"emit_bool","","",34],[10,"emit_f64","","",34],[10,"emit_f32","","",34],[10,"emit_char","","",34],[10,"emit_str","","",34],[10,"emit_enum","","",34],[10,"emit_enum_variant","","",34],[10,"emit_enum_variant_arg","","",34],[10,"emit_enum_struct_variant","","",34],[10,"emit_enum_struct_variant_field","","",34],[10,"emit_struct","","",34],[10,"emit_struct_field","","",34],[10,"emit_tuple","","",34],[10,"emit_tuple_arg","","",34],[10,"emit_tuple_struct","","",34],[10,"emit_tuple_struct_arg","","",34],[10,"emit_option","","",34],[10,"emit_option_none","","",34],[10,"emit_option_some","","",34],[10,"emit_seq","","",34],[10,"emit_seq_elt","","",34],[10,"emit_map","","",34],[10,"emit_map_elt_key","","",34],[10,"emit_map_elt_val","","",34],[10,"encode","","",26],[10,"from_reader","","Decodes a json value from an `&mut io::Reader`",26],[10,"from_str","","Decodes a json value from a string",26],[10,"pretty","","Borrow this json object as a pretty object to generate a pretty\nrepresentation for it via `Show`.",26],[10,"find","","If the Json value is an Object, returns the value associated with the provided key.\nOtherwise, returns None.",26],[10,"find_path","","Attempts to get a nested Json Object for each key in `keys`.\nIf any key is found not to exist, find_path will return None.\nOtherwise, it will return the Json value associated with the final key.",26],[10,"search","","If the Json value is an Object, performs a depth-first search until\na value associated with the provided key is found. If no value is found\nor the Json value is not an Object, returns None.",26],[10,"is_object","","Returns true if the Json value is an Object. Returns false otherwise.",26],[10,"as_object","","If the Json value is an Object, returns the associated BTreeMap.\nReturns None otherwise.",26],[10,"is_array","","Returns true if the Json value is an Array. Returns false otherwise.",26],[10,"as_array","","If the Json value is an Array, returns the associated vector.\nReturns None otherwise.",26],[10,"is_string","","Returns true if the Json value is a String. Returns false otherwise.",26],[10,"as_string","","If the Json value is a String, returns the associated str.\nReturns None otherwise.",26],[10,"is_number","","Returns true if the Json value is a Number. Returns false otherwise.",26],[10,"is_i64","","Returns true if the Json value is a i64. Returns false otherwise.",26],[10,"is_u64","","Returns true if the Json value is a u64. Returns false otherwise.",26],[10,"is_f64","","Returns true if the Json value is a f64. Returns false otherwise.",26],[10,"as_i64","","If the Json value is a number, return or cast it to a i64.\nReturns None otherwise.",26],[10,"as_u64","","If the Json value is a number, return or cast it to a u64.\nReturns None otherwise.",26],[10,"as_f64","","If the Json value is a number, return or cast it to a f64.\nReturns None otherwise.",26],[10,"is_boolean","","Returns true if the Json value is a Boolean. Returns false otherwise.",26],[10,"as_boolean","","If the Json value is a Boolean, returns the associated bool.\nReturns None otherwise.",26],[10,"is_null","","Returns true if the Json value is a Null. Returns false otherwise.",26],[10,"as_null","","If the Json value is a Null, returns ().\nReturns None otherwise.",26],[4,"Output","",""],[10,"index","","",26],[4,"Output","",""],[10,"index","","",26],[10,"fmt","","",30],[10,"clone","","",30],[10,"eq","","",30],[10,"ne","","",30],[10,"fmt","","",31],[10,"clone","","",31],[10,"eq","","",31],[10,"ne","","",31],[10,"new","","",35],[10,"len","","Returns The number of elements in the Stack.",35],[10,"is_empty","","Returns true if the stack is empty.",35],[10,"get","","Provides access to the StackElement at a given index.\nlower indices are at the bottom of the stack while higher indices are\nat the top.",35],[10,"is_equal_to","","Compares this stack with an array of StackElements.",35],[10,"starts_with","","Returns true if the bottom-most elements of this stack are the same as\nthe ones passed as parameter.",35],[10,"ends_with","","Returns true if the top-most elements of this stack are the same as\nthe ones passed as parameter.",35],[10,"top","","Returns the top-most element (if any).",35],[4,"Item","",""],[10,"next","","",36],[10,"new","","Creates the JSON parser.",36],[10,"stack","","Provides access to the current position in the logical structure of the\nJSON stream.",36],[10,"new","","Create a JSON Builder.",37],[10,"build","","",37],[10,"new","","Creates a new decoder instance for decoding the specified JSON value.",38],[4,"Error","",""],[10,"read_nil","","",38],[10,"read_usize","","",38],[10,"read_u8","","",38],[10,"read_u16","","",38],[10,"read_u32","","",38],[10,"read_u64","","",38],[10,"read_isize","","",38],[10,"read_i8","","",38],[10,"read_i16","","",38],[10,"read_i32","","",38],[10,"read_i64","","",38],[10,"read_f32","","",38],[10,"read_f64","","",38],[10,"read_bool","","",38],[10,"read_char","","",38],[10,"read_str","","",38],[10,"read_enum","","",38],[10,"read_enum_variant","","",38],[10,"read_enum_variant_arg","","",38],[10,"read_enum_struct_variant","","",38],[10,"read_enum_struct_variant_field","","",38],[10,"read_struct","","",38],[10,"read_struct_field","","",38],[10,"read_tuple","","",38],[10,"read_tuple_arg","","",38],[10,"read_tuple_struct","","",38],[10,"read_tuple_struct_arg","","",38],[10,"read_option","","",38],[10,"read_seq","","",38],[10,"read_seq_elt","","",38],[10,"read_map","","",38],[10,"read_map_elt_key","","",38],[10,"read_map_elt_val","","",38],[10,"error","","",38],[10,"to_json","","",26],[10,"to_json","collections::string","",0],[10,"to_json","collections::vec","",3],[10,"to_json","collections::btree::map","",12],[10,"to_json","std::collections::hash::map","",14],[10,"to_json","core::option","",4],[10,"fmt","rustc-serialize::json","Encodes a json value into a string",26],[10,"fmt","","Encodes a json value into a string",39],[10,"fmt","","Encodes a json value into a string",40],[10,"indent","","Set the indentation level for the emitted JSON",41],[10,"fmt","","Encodes a json value into a string",41],[10,"from_str","","",26],[10,"encode","collections::string","",0],[10,"decode","","",0],[10,"encode","alloc::boxed","",1],[10,"decode","","",1],[10,"decode","","",1],[10,"encode","alloc::rc","",2],[10,"decode","","",2],[10,"encode","collections::vec","",3],[10,"decode","","",3],[10,"encode","core::option","",4],[10,"decode","","",4],[10,"encode","std::path::posix","",5],[10,"decode","","",5],[10,"encode","std::path::windows","",6],[10,"decode","","",6],[10,"encode","core::cell","",7],[10,"decode","","",7],[10,"encode","","",8],[10,"decode","","",8],[10,"encode","alloc::arc","",9],[10,"decode","","",9],[6,"Decoder","rustc-serialize",""],[17,"Error","rustc-serialize::Decoder",""],[9,"read_nil","rustc-serialize","",42],[9,"read_usize","","",42],[9,"read_u64","","",42],[9,"read_u32","","",42],[9,"read_u16","","",42],[9,"read_u8","","",42],[9,"read_isize","","",42],[9,"read_i64","","",42],[9,"read_i32","","",42],[9,"read_i16","","",42],[9,"read_i8","","",42],[9,"read_bool","","",42],[9,"read_f64","","",42],[9,"read_f32","","",42],[9,"read_char","","",42],[9,"read_str","","",42],[9,"read_enum","","",42],[9,"read_enum_variant","","",42],[9,"read_enum_variant_arg","","",42],[9,"read_enum_struct_variant","","",42],[9,"read_enum_struct_variant_field","","",42],[9,"read_struct","","",42],[9,"read_struct_field","","",42],[9,"read_tuple","","",42],[9,"read_tuple_arg","","",42],[9,"read_tuple_struct","","",42],[9,"read_tuple_struct_arg","","",42],[9,"read_option","","",42],[9,"read_seq","","",42],[9,"read_seq_elt","","",42],[9,"read_map","","",42],[9,"read_map_elt_key","","",42],[9,"read_map_elt_val","","",42],[9,"error","","",42],[6,"Encoder","",""],[17,"Error","rustc-serialize::Encoder",""],[9,"emit_nil","rustc-serialize","",43],[9,"emit_usize","","",43],[9,"emit_u64","","",43],[9,"emit_u32","","",43],[9,"emit_u16","","",43],[9,"emit_u8","","",43],[9,"emit_isize","","",43],[9,"emit_i64","","",43],[9,"emit_i32","","",43],[9,"emit_i16","","",43],[9,"emit_i8","","",43],[9,"emit_bool","","",43],[9,"emit_f64","","",43],[9,"emit_f32","","",43],[9,"emit_char","","",43],[9,"emit_str","","",43],[9,"emit_enum","","",43],[9,"emit_enum_variant","","",43],[9,"emit_enum_variant_arg","","",43],[9,"emit_enum_struct_variant","","",43],[9,"emit_enum_struct_variant_field","","",43],[9,"emit_struct","","",43],[9,"emit_struct_field","","",43],[9,"emit_tuple","","",43],[9,"emit_tuple_arg","","",43],[9,"emit_tuple_struct","","",43],[9,"emit_tuple_struct_arg","","",43],[9,"emit_option","","",43],[9,"emit_option_none","","",43],[9,"emit_option_some","","",43],[9,"emit_seq","","",43],[9,"emit_seq_elt","","",43],[9,"emit_map","","",43],[9,"emit_map_elt_key","","",43],[9,"emit_map_elt_val","","",43],[6,"Decodable","",""],[9,"decode","","",44],[6,"Encodable","",""],[9,"encode","","",45],[6,"DecoderHelpers","",""],[9,"read_to_vec","","",46],[6,"EncoderHelpers","",""],[9,"emit_from_vec","","",47]],"paths":[[1,"String"],[1,"Box"],[1,"Rc"],[1,"Vec"],[2,"Option"],[1,"Path"],[1,"Path"],[1,"Cell"],[1,"RefCell"],[1,"Arc"],[1,"DList"],[1,"RingBuf"],[1,"BTreeMap"],[1,"BTreeSet"],[1,"HashMap"],[1,"HashSet"],[1,"VecMap"],[1,"Config"],[2,"CharacterSet"],[2,"Newline"],[2,"FromBase64Error"],[6,"ToBase64"],[6,"FromBase64"],[2,"FromHexError"],[6,"ToHex"],[6,"FromHex"],[2,"Json"],[2,"ErrorCode"],[2,"ParserError"],[2,"DecoderError"],[2,"JsonEvent"],[2,"StackElement"],[6,"ToJson"],[1,"Encoder"],[1,"PrettyEncoder"],[1,"Stack"],[1,"Parser"],[1,"Builder"],[1,"Decoder"],[1,"PrettyJson"],[1,"AsJson"],[1,"AsPrettyJson"],[6,"Decoder"],[6,"Encoder"],[6,"Decodable"],[6,"Encodable"],[6,"DecoderHelpers"],[6,"EncoderHelpers"]]};

initSearch(searchIndex);
