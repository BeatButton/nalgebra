{"name":"nalgebra","tagline":"Linear algebra library for computer physics, computer graphics and data analysis for Rust.","body":"# About nalgebra\r\n\r\n**nalgebra** is a linear algebra library written for Rust targeting:\r\n\r\n* general-purpose linear algebra (still misses a lot of features…).\r\n* real time computer graphics.\r\n* real time computer physics.\r\n\r\n## Features\r\n**nalgebra** is meant to be a general-purpose linear algebra library (but is very far from that…),\r\nand keeps an optimized set of tools for computational graphics and physics. Those features include:\r\n\r\n* Vectors with static sizes: `Vec0`, `Vec1`, `Vec2`, `Vec3`, `Vec4`, `Vec5`, `Vec6`.\r\n* Square matrices with static sizes: `Mat1`, `Mat2`, `Mat3`, `Mat4`, `Mat5`, `Mat6 `.\r\n* Rotation matrices: `Rot2`, `Rot3`, `Rot4`.\r\n* Isometries: `Iso2`, `Iso3`, `Iso4`.\r\n* Dynamically sized vector: `DVec`.\r\n* Dynamically sized (square or rectangular) matrix: `DMat`.\r\n* A few methods for data analysis: `Cov`, `Mean`.\r\n* Some matrix factorization algorithms: QR decomposition, ...\r\n* Almost one trait per functionality: useful for generic programming.\r\n* Operator overloading using the double trait dispatch\r\n  [trick](http://smallcultfollowing.com/babysteps/blog/2012/10/04/refining-traits-slash-impls/).\r\n  For example, the following works:\r\n\r\n```rust\r\nextern mod nalgebra;\r\nuse nalgebra::na::{Vec3, Mat3};\r\nuse nalgebra::na;\r\n\r\nfn main() {\r\n    let v: Vec3<f64> = na::zero();\r\n    let m: Mat3<f64> = na::one();\r\n\r\n    let _ = m * v;   // matrix-vector multiplication.\r\n    let _ = v * m;   // vector-matrix multiplication.\r\n    let _ = m * m;   // matrix-matrix multiplication.\r\n    let _ = v * 2.0; // vector-scalar multiplication.\r\n}\r\n```\r\n\r\nFor more, check out the [online documentation](doc/nalgebra).","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}